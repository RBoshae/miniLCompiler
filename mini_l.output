State 140 conflicts: 1 shift/reduce
State 142 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 183 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program_Prime $end

    1 Program_Prime: Program

    2 Program: %empty
    3        | Function Program

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    5 Alpha: %empty
    6      | Declaration SEMICOLON Alpha

    7 Beta: Statement SEMICOLON
    8     | Statement SEMICOLON Beta

    9 Declaration: identifiers C COLON D INTEGER

   10 C: %empty
   11  | COMMA identifiers C

   12 D: %empty
   13  | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

   14 Statement: E
   15          | F
   16          | H
   17          | I
   18          | J
   19          | K
   20          | WRITE Var Lima
   21          | WRITE Var
   22          | CONTINUE
   23          | RETURN Expression

   24 E: Var ASSIGN Expression

   25 F: IF Bool-Expr THEN Statement SEMICOLON Beta G ENDIF
   26  | IF Bool-Expr THEN Statement SEMICOLON G ENDIF

   27 G: %empty
   28  | ELSE Statement SEMICOLON
   29  | ELSE Statement SEMICOLON Beta

   30 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP
   31  | WHILE Bool-Expr BEGINLOOP Statement SEMICOLON Beta ENDLOOP

   32 I: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr
   33  | DO BEGINLOOP Statement SEMICOLON Beta ENDLOOP WHILE Bool-Expr

   34 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   35  | FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

   36 K: READ Var Lima
   37  | READ Var

   38 Lima: COMMA Var
   39     | COMMA Var Lima

   40 Bool-Expr: Relation-And-Expr Papa
   41          | Relation-And-Expr

   42 Papa: OR Relation-And-Expr
   43     | OR Relation-And-Expr Papa

   44 Relation-And-Expr: Relation-Expr Quebec
   45                  | Relation-Expr

   46 Quebec: AND Relation-Expr
   47       | AND Relation-Expr Quebec

   48 Relation-Expr: Expression Comp Expression
   49              | NOT Expression Comp Expression
   50              | TRUE
   51              | NOT TRUE
   52              | FALSE
   53              | NOT FALSE
   54              | L_PAREN Bool-Expr R_PAREN
   55              | NOT L_PAREN Bool-Expr R_PAREN

   56 Comp: EQ
   57     | NEQ
   58     | LT
   59     | GT
   60     | LTE
   61     | GTE

   62 Expression: Multiplicative-Expr S T

   63 S: %empty
   64  | PLUS Multiplicative-Expr S T

   65 T: %empty
   66  | SUB Multiplicative-Expr S T

   67 Multiplicative-Expr: Term U V W

   68 U: %empty
   69  | MULT Term U V W

   70 V: %empty
   71  | DIV Term U V W

   72 W: %empty
   73  | MOD Term U V W

   74 Term: Var
   75     | SUB Var
   76     | NUMBER
   77     | SUB NUMBER
   78     | L_PAREN Expression R_PAREN
   79     | SUB L_PAREN Expression R_PAREN
   80     | identifiers L_PAREN Y R_PAREN

   81 Y: %empty
   82  | Expression Z

   83 Z: %empty
   84  | COMMA Expression Z

   85 Var: identifiers
   86    | identifiers L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   87 identifiers: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 87
FUNCTION (259) 4
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
ARRAY (264) 13
OF (265) 13
IF (266) 25 26
THEN (267) 25 26
ENDIF (268) 25 26
ELSE (269) 28 29
WHILE (270) 30 31 32 33
DO (271) 32 33
FOREACH (272) 34 35
IN (273) 34 35
BEGINLOOP (274) 30 31 32 33 34 35
ENDLOOP (275) 30 31 32 33 34 35
CONTINUE (276) 22
READ (277) 36 37
WRITE (278) 20 21
TRUE (279) 50 51
FALSE (280) 52 53
COLON (281) 9
COMMA (282) 11 38 39 84
INTEGER (283) 9
AND (284) 46 47
OR (285) 42 43
BEGIN_BODY (286) 4
RETURN (287) 23
NOT (288) 49 51 53 55
END_BODY (289) 4
SEMICOLON (290) 4 6 7 8 25 26 28 29 30 31 32 33 34 35
ASSIGN (291) 24
PLUS (292) 64
SUB (293) 66 75 77 79
MULT (294) 69
DIV (295) 71
MOD (296) 73
L_SQUARE_BRACKET (297) 13 86
R_SQUARE_BRACKET (298) 13 86
L_PAREN (299) 54 55 78 79 80
EQ (300) 56
NEQ (301) 57
LT (302) 58
GT (303) 59
LTE (304) 60
GTE (305) 61
R_PAREN (306) 54 55 78 79 80
NUMBER (307) 13 76 77


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program_Prime (54)
    on left: 1, on right: 0
Program (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 4, on right: 3
Alpha (57)
    on left: 5 6, on right: 4 6
Beta (58)
    on left: 7 8, on right: 4 8 25 29 31 33 34
Declaration (59)
    on left: 9, on right: 6
C (60)
    on left: 10 11, on right: 9 11
D (61)
    on left: 12 13, on right: 9
Statement (62)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 7 8 25 26 28
    29 30 31 32 33 34 35
E (63)
    on left: 24, on right: 14
F (64)
    on left: 25 26, on right: 15
G (65)
    on left: 27 28 29, on right: 25 26
H (66)
    on left: 30 31, on right: 16
I (67)
    on left: 32 33, on right: 17
J (68)
    on left: 34 35, on right: 18
K (69)
    on left: 36 37, on right: 19
Lima (70)
    on left: 38 39, on right: 20 36 39
Bool-Expr (71)
    on left: 40 41, on right: 25 26 30 31 32 33 54 55
Papa (72)
    on left: 42 43, on right: 40 43
Relation-And-Expr (73)
    on left: 44 45, on right: 40 41 42 43
Quebec (74)
    on left: 46 47, on right: 44 47
Relation-Expr (75)
    on left: 48 49 50 51 52 53 54 55, on right: 44 45 46 47
Comp (76)
    on left: 56 57 58 59 60 61, on right: 48 49
Expression (77)
    on left: 62, on right: 23 24 48 49 78 79 82 84 86
S (78)
    on left: 63 64, on right: 62 64 66
T (79)
    on left: 65 66, on right: 62 64 66
Multiplicative-Expr (80)
    on left: 67, on right: 62 64 66
U (81)
    on left: 68 69, on right: 67 69 71 73
V (82)
    on left: 70 71, on right: 67 69 71 73
W (83)
    on left: 72 73, on right: 67 69 71 73
Term (84)
    on left: 74 75 76 77 78 79 80, on right: 67 69 71 73
Y (85)
    on left: 81 82, on right: 80
Z (86)
    on left: 83 84, on right: 82 84
Var (87)
    on left: 85 86, on right: 20 21 24 36 37 38 39 74 75
identifiers (88)
    on left: 87, on right: 4 9 11 34 35 80 85 86


State 0

    0 $accept: . Program_Prime $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program_Prime  go to state 2
    Program        go to state 3
    Function       go to state 4


State 1

    4 Function: FUNCTION . identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    IDENT  shift, and go to state 5

    identifiers  go to state 6


State 2

    0 $accept: Program_Prime . $end

    $end  shift, and go to state 7


State 3

    1 Program_Prime: Program .

    $default  reduce using rule 1 (Program_Prime)


State 4

    3 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 8
    Function  go to state 4


State 5

   87 identifiers: IDENT .

    $default  reduce using rule 87 (identifiers)


State 6

    4 Function: FUNCTION identifiers . SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program_Prime $end .

    $default  accept


State 8

    3 Program: Function Program .

    $default  reduce using rule 3 (Program)


State 9

    4 Function: FUNCTION identifiers SEMICOLON . BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS . Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 11
    Declaration  go to state 12
    identifiers  go to state 13


State 11

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha . END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    END_PARAMS  shift, and go to state 14


State 12

    6 Alpha: Declaration . SEMICOLON Alpha

    SEMICOLON  shift, and go to state 15


State 13

    9 Declaration: identifiers . C COLON D INTEGER

    COMMA  shift, and go to state 16

    $default  reduce using rule 10 (C)

    C  go to state 17


State 14

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS . BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    6 Alpha: Declaration SEMICOLON . Alpha

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 19
    Declaration  go to state 12
    identifiers  go to state 13


State 16

   11 C: COMMA . identifiers C

    IDENT  shift, and go to state 5

    identifiers  go to state 20


State 17

    9 Declaration: identifiers C . COLON D INTEGER

    COLON  shift, and go to state 21


State 18

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS . Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 22
    Declaration  go to state 12
    identifiers  go to state 13


State 19

    6 Alpha: Declaration SEMICOLON Alpha .

    $default  reduce using rule 6 (Alpha)


State 20

   11 C: COMMA identifiers . C

    COMMA  shift, and go to state 16

    $default  reduce using rule 10 (C)

    C  go to state 23


State 21

    9 Declaration: identifiers C COLON . D INTEGER

    ARRAY  shift, and go to state 24

    $default  reduce using rule 12 (D)

    D  go to state 25


State 22

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha . END_LOCALS BEGIN_BODY Beta END_BODY

    END_LOCALS  shift, and go to state 26


State 23

   11 C: COMMA identifiers C .

    $default  reduce using rule 11 (C)


State 24

   13 D: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

    9 Declaration: identifiers C COLON D . INTEGER

    INTEGER  shift, and go to state 28


State 26

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS . BEGIN_BODY Beta END_BODY

    BEGIN_BODY  shift, and go to state 29


State 27

   13 D: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 30


State 28

    9 Declaration: identifiers C COLON D INTEGER .

    $default  reduce using rule 9 (Declaration)


State 29

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY . Beta END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Beta         go to state 39
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 30

   13 D: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 49


State 31

   25 F: IF . Bool-Expr THEN Statement SEMICOLON Beta G ENDIF
   26  | IF . Bool-Expr THEN Statement SEMICOLON G ENDIF

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Bool-Expr            go to state 56
    Relation-And-Expr    go to state 57
    Relation-Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 32

   30 H: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP
   31  | WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON Beta ENDLOOP

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Bool-Expr            go to state 64
    Relation-And-Expr    go to state 57
    Relation-Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 33

   32 I: DO . BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr
   33  | DO . BEGINLOOP Statement SEMICOLON Beta ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 65


State 34

   34 J: FOREACH . identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   35  | FOREACH . identifiers IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 5

    identifiers  go to state 66


State 35

   22 Statement: CONTINUE .

    $default  reduce using rule 22 (Statement)


State 36

   36 K: READ . Var Lima
   37  | READ . Var

    IDENT  shift, and go to state 5

    Var          go to state 67
    identifiers  go to state 48


State 37

   20 Statement: WRITE . Var Lima
   21          | WRITE . Var

    IDENT  shift, and go to state 5

    Var          go to state 68
    identifiers  go to state 48


State 38

   23 Statement: RETURN . Expression

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 70
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 39

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta . END_BODY

    END_BODY  shift, and go to state 71


State 40

    7 Beta: Statement . SEMICOLON
    8     | Statement . SEMICOLON Beta

    SEMICOLON  shift, and go to state 72


State 41

   14 Statement: E .

    $default  reduce using rule 14 (Statement)


State 42

   15 Statement: F .

    $default  reduce using rule 15 (Statement)


State 43

   16 Statement: H .

    $default  reduce using rule 16 (Statement)


State 44

   17 Statement: I .

    $default  reduce using rule 17 (Statement)


State 45

   18 Statement: J .

    $default  reduce using rule 18 (Statement)


State 46

   19 Statement: K .

    $default  reduce using rule 19 (Statement)


State 47

   24 E: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 73


State 48

   85 Var: identifiers .
   86    | identifiers . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 85 (Var)


State 49

   13 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 75


State 50

   50 Relation-Expr: TRUE .

    $default  reduce using rule 50 (Relation-Expr)


State 51

   52 Relation-Expr: FALSE .

    $default  reduce using rule 52 (Relation-Expr)


State 52

   49 Relation-Expr: NOT . Expression Comp Expression
   51              | NOT . TRUE
   53              | NOT . FALSE
   55              | NOT . L_PAREN Bool-Expr R_PAREN

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 76
    FALSE    shift, and go to state 77
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 78
    NUMBER   shift, and go to state 55

    Expression           go to state 79
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 53

   75 Term: SUB . Var
   77     | SUB . NUMBER
   79     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 81

    Var          go to state 82
    identifiers  go to state 48


State 54

   54 Relation-Expr: L_PAREN . Bool-Expr R_PAREN
   78 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Bool-Expr            go to state 83
    Relation-And-Expr    go to state 57
    Relation-Expr        go to state 58
    Expression           go to state 84
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 55

   76 Term: NUMBER .

    $default  reduce using rule 76 (Term)


State 56

   25 F: IF Bool-Expr . THEN Statement SEMICOLON Beta G ENDIF
   26  | IF Bool-Expr . THEN Statement SEMICOLON G ENDIF

    THEN  shift, and go to state 85


State 57

   40 Bool-Expr: Relation-And-Expr . Papa
   41          | Relation-And-Expr .

    OR  shift, and go to state 86

    $default  reduce using rule 41 (Bool-Expr)

    Papa  go to state 87


State 58

   44 Relation-And-Expr: Relation-Expr . Quebec
   45                  | Relation-Expr .

    AND  shift, and go to state 88

    $default  reduce using rule 45 (Relation-And-Expr)

    Quebec  go to state 89


State 59

   48 Relation-Expr: Expression . Comp Expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    Comp  go to state 96


State 60

   62 Expression: Multiplicative-Expr . S T

    PLUS  shift, and go to state 97

    $default  reduce using rule 63 (S)

    S  go to state 98


State 61

   67 Multiplicative-Expr: Term . U V W

    MULT  shift, and go to state 99

    $default  reduce using rule 68 (U)

    U  go to state 100


State 62

   74 Term: Var .

    $default  reduce using rule 74 (Term)


State 63

   80 Term: identifiers . L_PAREN Y R_PAREN
   85 Var: identifiers .
   86    | identifiers . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 74
    L_PAREN           shift, and go to state 101

    $default  reduce using rule 85 (Var)


State 64

   30 H: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON ENDLOOP
   31  | WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON Beta ENDLOOP

    BEGINLOOP  shift, and go to state 102


State 65

   32 I: DO BEGINLOOP . Statement SEMICOLON ENDLOOP WHILE Bool-Expr
   33  | DO BEGINLOOP . Statement SEMICOLON Beta ENDLOOP WHILE Bool-Expr

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement    go to state 103
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 66

   34 J: FOREACH identifiers . IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   35  | FOREACH identifiers . IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

    IN  shift, and go to state 104


State 67

   36 K: READ Var . Lima
   37  | READ Var .

    COMMA  shift, and go to state 105

    $default  reduce using rule 37 (K)

    Lima  go to state 106


State 68

   20 Statement: WRITE Var . Lima
   21          | WRITE Var .

    COMMA  shift, and go to state 105

    $default  reduce using rule 21 (Statement)

    Lima  go to state 107


State 69

   78 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 108
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 70

   23 Statement: RETURN Expression .

    $default  reduce using rule 23 (Statement)


State 71

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY .

    $default  reduce using rule 4 (Function)


State 72

    7 Beta: Statement SEMICOLON .
    8     | Statement SEMICOLON . Beta

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 7 (Beta)

    Beta         go to state 109
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 73

   24 E: Var ASSIGN . Expression

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 110
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 74

   86 Var: identifiers L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 111
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 75

   13 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 13 (D)


State 76

   51 Relation-Expr: NOT TRUE .

    $default  reduce using rule 51 (Relation-Expr)


State 77

   53 Relation-Expr: NOT FALSE .

    $default  reduce using rule 53 (Relation-Expr)


State 78

   55 Relation-Expr: NOT L_PAREN . Bool-Expr R_PAREN
   78 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Bool-Expr            go to state 112
    Relation-And-Expr    go to state 57
    Relation-Expr        go to state 58
    Expression           go to state 84
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 79

   49 Relation-Expr: NOT Expression . Comp Expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    Comp  go to state 113


State 80

   79 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 114
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 81

   77 Term: SUB NUMBER .

    $default  reduce using rule 77 (Term)


State 82

   75 Term: SUB Var .

    $default  reduce using rule 75 (Term)


State 83

   54 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 115


State 84

   48 Relation-Expr: Expression . Comp Expression
   78 Term: L_PAREN Expression . R_PAREN

    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91
    LT       shift, and go to state 92
    GT       shift, and go to state 93
    LTE      shift, and go to state 94
    GTE      shift, and go to state 95
    R_PAREN  shift, and go to state 116

    Comp  go to state 96


State 85

   25 F: IF Bool-Expr THEN . Statement SEMICOLON Beta G ENDIF
   26  | IF Bool-Expr THEN . Statement SEMICOLON G ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement    go to state 117
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 86

   42 Papa: OR . Relation-And-Expr
   43     | OR . Relation-And-Expr Papa

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Relation-And-Expr    go to state 118
    Relation-Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 87

   40 Bool-Expr: Relation-And-Expr Papa .

    $default  reduce using rule 40 (Bool-Expr)


State 88

   46 Quebec: AND . Relation-Expr
   47       | AND . Relation-Expr Quebec

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Relation-Expr        go to state 119
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 89

   44 Relation-And-Expr: Relation-Expr Quebec .

    $default  reduce using rule 44 (Relation-And-Expr)


State 90

   56 Comp: EQ .

    $default  reduce using rule 56 (Comp)


State 91

   57 Comp: NEQ .

    $default  reduce using rule 57 (Comp)


State 92

   58 Comp: LT .

    $default  reduce using rule 58 (Comp)


State 93

   59 Comp: GT .

    $default  reduce using rule 59 (Comp)


State 94

   60 Comp: LTE .

    $default  reduce using rule 60 (Comp)


State 95

   61 Comp: GTE .

    $default  reduce using rule 61 (Comp)


State 96

   48 Relation-Expr: Expression Comp . Expression

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 120
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 97

   64 S: PLUS . Multiplicative-Expr S T

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Multiplicative-Expr  go to state 121
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 98

   62 Expression: Multiplicative-Expr S . T

    SUB  shift, and go to state 122

    $default  reduce using rule 65 (T)

    T  go to state 123


State 99

   69 U: MULT . Term U V W

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Term         go to state 124
    Var          go to state 62
    identifiers  go to state 63


State 100

   67 Multiplicative-Expr: Term U . V W

    DIV  shift, and go to state 125

    $default  reduce using rule 70 (V)

    V  go to state 126


State 101

   80 Term: identifiers L_PAREN . Y R_PAREN

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    $default  reduce using rule 81 (Y)

    Expression           go to state 127
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Y                    go to state 128
    Var                  go to state 62
    identifiers          go to state 63


State 102

   30 H: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON ENDLOOP
   31  | WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON Beta ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement    go to state 129
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 103

   32 I: DO BEGINLOOP Statement . SEMICOLON ENDLOOP WHILE Bool-Expr
   33  | DO BEGINLOOP Statement . SEMICOLON Beta ENDLOOP WHILE Bool-Expr

    SEMICOLON  shift, and go to state 130


State 104

   34 J: FOREACH identifiers IN . identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   35  | FOREACH identifiers IN . identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 5

    identifiers  go to state 131


State 105

   38 Lima: COMMA . Var
   39     | COMMA . Var Lima

    IDENT  shift, and go to state 5

    Var          go to state 132
    identifiers  go to state 48


State 106

   36 K: READ Var Lima .

    $default  reduce using rule 36 (K)


State 107

   20 Statement: WRITE Var Lima .

    $default  reduce using rule 20 (Statement)


State 108

   78 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 116


State 109

    8 Beta: Statement SEMICOLON Beta .

    $default  reduce using rule 8 (Beta)


State 110

   24 E: Var ASSIGN Expression .

    $default  reduce using rule 24 (E)


State 111

   86 Var: identifiers L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 133


State 112

   55 Relation-Expr: NOT L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 134


State 113

   49 Relation-Expr: NOT Expression Comp . Expression

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 135
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 114

   79 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 136


State 115

   54 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 54 (Relation-Expr)


State 116

   78 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 78 (Term)


State 117

   25 F: IF Bool-Expr THEN Statement . SEMICOLON Beta G ENDIF
   26  | IF Bool-Expr THEN Statement . SEMICOLON G ENDIF

    SEMICOLON  shift, and go to state 137


State 118

   42 Papa: OR Relation-And-Expr .
   43     | OR Relation-And-Expr . Papa

    OR  shift, and go to state 86

    $default  reduce using rule 42 (Papa)

    Papa  go to state 138


State 119

   46 Quebec: AND Relation-Expr .
   47       | AND Relation-Expr . Quebec

    AND  shift, and go to state 88

    $default  reduce using rule 46 (Quebec)

    Quebec  go to state 139


State 120

   48 Relation-Expr: Expression Comp Expression .

    $default  reduce using rule 48 (Relation-Expr)


State 121

   64 S: PLUS Multiplicative-Expr . S T

    PLUS  shift, and go to state 97

    $default  reduce using rule 63 (S)

    S  go to state 140


State 122

   66 T: SUB . Multiplicative-Expr S T

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Multiplicative-Expr  go to state 141
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 123

   62 Expression: Multiplicative-Expr S T .

    $default  reduce using rule 62 (Expression)


State 124

   69 U: MULT Term . U V W

    MULT  shift, and go to state 99

    $default  reduce using rule 68 (U)

    U  go to state 142


State 125

   71 V: DIV . Term U V W

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Term         go to state 143
    Var          go to state 62
    identifiers  go to state 63


State 126

   67 Multiplicative-Expr: Term U V . W

    MOD  shift, and go to state 144

    $default  reduce using rule 72 (W)

    W  go to state 145


State 127

   82 Y: Expression . Z

    COMMA  shift, and go to state 146

    $default  reduce using rule 83 (Z)

    Z  go to state 147


State 128

   80 Term: identifiers L_PAREN Y . R_PAREN

    R_PAREN  shift, and go to state 148


State 129

   30 H: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON ENDLOOP
   31  | WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON Beta ENDLOOP

    SEMICOLON  shift, and go to state 149


State 130

   32 I: DO BEGINLOOP Statement SEMICOLON . ENDLOOP WHILE Bool-Expr
   33  | DO BEGINLOOP Statement SEMICOLON . Beta ENDLOOP WHILE Bool-Expr

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    ENDLOOP   shift, and go to state 150
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Beta         go to state 151
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 131

   34 J: FOREACH identifiers IN identifiers . BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   35  | FOREACH identifiers IN identifiers . BEGINLOOP Statement SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 152


State 132

   38 Lima: COMMA Var .
   39     | COMMA Var . Lima

    COMMA  shift, and go to state 105

    $default  reduce using rule 38 (Lima)

    Lima  go to state 153


State 133

   86 Var: identifiers L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 86 (Var)


State 134

   55 Relation-Expr: NOT L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 55 (Relation-Expr)


State 135

   49 Relation-Expr: NOT Expression Comp Expression .

    $default  reduce using rule 49 (Relation-Expr)


State 136

   79 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 79 (Term)


State 137

   25 F: IF Bool-Expr THEN Statement SEMICOLON . Beta G ENDIF
   26  | IF Bool-Expr THEN Statement SEMICOLON . G ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    ELSE      shift, and go to state 154
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 27 (G)

    Beta         go to state 155
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    G            go to state 156
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 138

   43 Papa: OR Relation-And-Expr Papa .

    $default  reduce using rule 43 (Papa)


State 139

   47 Quebec: AND Relation-Expr Quebec .

    $default  reduce using rule 47 (Quebec)


State 140

   64 S: PLUS Multiplicative-Expr S . T

    SUB  shift, and go to state 122

    SUB       [reduce using rule 65 (T)]
    $default  reduce using rule 65 (T)

    T  go to state 157


State 141

   66 T: SUB Multiplicative-Expr . S T

    PLUS  shift, and go to state 97

    $default  reduce using rule 63 (S)

    S  go to state 158


State 142

   69 U: MULT Term U . V W

    DIV  shift, and go to state 125

    DIV       [reduce using rule 70 (V)]
    $default  reduce using rule 70 (V)

    V  go to state 159


State 143

   71 V: DIV Term . U V W

    MULT  shift, and go to state 99

    $default  reduce using rule 68 (U)

    U  go to state 160


State 144

   73 W: MOD . Term U V W

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Term         go to state 161
    Var          go to state 62
    identifiers  go to state 63


State 145

   67 Multiplicative-Expr: Term U V W .

    $default  reduce using rule 67 (Multiplicative-Expr)


State 146

   84 Z: COMMA . Expression Z

    IDENT    shift, and go to state 5
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 55

    Expression           go to state 162
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 147

   82 Y: Expression Z .

    $default  reduce using rule 82 (Y)


State 148

   80 Term: identifiers L_PAREN Y R_PAREN .

    $default  reduce using rule 80 (Term)


State 149

   30 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . ENDLOOP
   31  | WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . Beta ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    ENDLOOP   shift, and go to state 163
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Beta         go to state 164
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 150

   32 I: DO BEGINLOOP Statement SEMICOLON ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 165


State 151

   33 I: DO BEGINLOOP Statement SEMICOLON Beta . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 166


State 152

   34 J: FOREACH identifiers IN identifiers BEGINLOOP . Statement SEMICOLON Beta ENDLOOP
   35  | FOREACH identifiers IN identifiers BEGINLOOP . Statement SEMICOLON ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement    go to state 167
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 153

   39 Lima: COMMA Var Lima .

    $default  reduce using rule 39 (Lima)


State 154

   28 G: ELSE . Statement SEMICOLON
   29  | ELSE . Statement SEMICOLON Beta

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement    go to state 168
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 155

   25 F: IF Bool-Expr THEN Statement SEMICOLON Beta . G ENDIF

    ELSE  shift, and go to state 154

    $default  reduce using rule 27 (G)

    G  go to state 169


State 156

   26 F: IF Bool-Expr THEN Statement SEMICOLON G . ENDIF

    ENDIF  shift, and go to state 170


State 157

   64 S: PLUS Multiplicative-Expr S T .

    $default  reduce using rule 64 (S)


State 158

   66 T: SUB Multiplicative-Expr S . T

    SUB  shift, and go to state 122

    SUB       [reduce using rule 65 (T)]
    $default  reduce using rule 65 (T)

    T  go to state 171


State 159

   69 U: MULT Term U V . W

    MOD  shift, and go to state 144

    MOD       [reduce using rule 72 (W)]
    $default  reduce using rule 72 (W)

    W  go to state 172


State 160

   71 V: DIV Term U . V W

    DIV  shift, and go to state 125

    DIV       [reduce using rule 70 (V)]
    $default  reduce using rule 70 (V)

    V  go to state 173


State 161

   73 W: MOD Term . U V W

    MULT  shift, and go to state 99

    $default  reduce using rule 68 (U)

    U  go to state 174


State 162

   84 Z: COMMA Expression . Z

    COMMA  shift, and go to state 146

    $default  reduce using rule 83 (Z)

    Z  go to state 175


State 163

   30 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 30 (H)


State 164

   31 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON Beta . ENDLOOP

    ENDLOOP  shift, and go to state 176


State 165

   32 I: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE . Bool-Expr

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Bool-Expr            go to state 177
    Relation-And-Expr    go to state 57
    Relation-Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 166

   33 I: DO BEGINLOOP Statement SEMICOLON Beta ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 178


State 167

   34 J: FOREACH identifiers IN identifiers BEGINLOOP Statement . SEMICOLON Beta ENDLOOP
   35  | FOREACH identifiers IN identifiers BEGINLOOP Statement . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 179


State 168

   28 G: ELSE Statement . SEMICOLON
   29  | ELSE Statement . SEMICOLON Beta

    SEMICOLON  shift, and go to state 180


State 169

   25 F: IF Bool-Expr THEN Statement SEMICOLON Beta G . ENDIF

    ENDIF  shift, and go to state 181


State 170

   26 F: IF Bool-Expr THEN Statement SEMICOLON G ENDIF .

    $default  reduce using rule 26 (F)


State 171

   66 T: SUB Multiplicative-Expr S T .

    $default  reduce using rule 66 (T)


State 172

   69 U: MULT Term U V W .

    $default  reduce using rule 69 (U)


State 173

   71 V: DIV Term U V . W

    MOD  shift, and go to state 144

    MOD       [reduce using rule 72 (W)]
    $default  reduce using rule 72 (W)

    W  go to state 182


State 174

   73 W: MOD Term U . V W

    DIV  shift, and go to state 125

    DIV       [reduce using rule 70 (V)]
    $default  reduce using rule 70 (V)

    V  go to state 183


State 175

   84 Z: COMMA Expression Z .

    $default  reduce using rule 84 (Z)


State 176

   31 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON Beta ENDLOOP .

    $default  reduce using rule 31 (H)


State 177

   32 I: DO BEGINLOOP Statement SEMICOLON ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 32 (I)


State 178

   33 I: DO BEGINLOOP Statement SEMICOLON Beta ENDLOOP WHILE . Bool-Expr

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55

    Bool-Expr            go to state 184
    Relation-And-Expr    go to state 57
    Relation-Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Var                  go to state 62
    identifiers          go to state 63


State 179

   34 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON . Beta ENDLOOP
   35  | FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON . ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    ENDLOOP   shift, and go to state 185
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Beta         go to state 186
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 180

   28 G: ELSE Statement SEMICOLON .
   29  | ELSE Statement SEMICOLON . Beta

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 28 (G)

    Beta         go to state 187
    Statement    go to state 40
    E            go to state 41
    F            go to state 42
    H            go to state 43
    I            go to state 44
    J            go to state 45
    K            go to state 46
    Var          go to state 47
    identifiers  go to state 48


State 181

   25 F: IF Bool-Expr THEN Statement SEMICOLON Beta G ENDIF .

    $default  reduce using rule 25 (F)


State 182

   71 V: DIV Term U V W .

    $default  reduce using rule 71 (V)


State 183

   73 W: MOD Term U V . W

    MOD  shift, and go to state 144

    MOD       [reduce using rule 72 (W)]
    $default  reduce using rule 72 (W)

    W  go to state 188


State 184

   33 I: DO BEGINLOOP Statement SEMICOLON Beta ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 33 (I)


State 185

   35 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 35 (J)


State 186

   34 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta . ENDLOOP

    ENDLOOP  shift, and go to state 189


State 187

   29 G: ELSE Statement SEMICOLON Beta .

    $default  reduce using rule 29 (G)


State 188

   73 W: MOD Term U V W .

    $default  reduce using rule 73 (W)


State 189

   34 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP .

    $default  reduce using rule 34 (J)
