State 31 conflicts: 2 shift/reduce
State 32 conflicts: 2 shift/reduce
State 38 conflicts: 1 shift/reduce
State 53 conflicts: 2 shift/reduce
State 57 conflicts: 2 shift/reduce
State 72 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 80 conflicts: 2 shift/reduce
State 82 conflicts: 2 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program_Prime $end

    1 Program_Prime: Program

    2 Program: %empty
    3        | Function Program

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    5 A: %empty
    6  | Declaration SEMICOLON A

    7 B: %empty
    8  | Statement SEMICOLON B

    9 Declaration: IDENT C COLON D INTEGER

   10 C: %empty
   11  | COMMA IDENT C

   12 D: %empty
   13  | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

   14 Statement: E
   15          | F
   16          | H
   17          | I
   18          | J
   19          | K
   20          | M
   21          | N
   22          | O

   23 E: Var ASSIGN Expression

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF SEMICOLON

   25 G: %empty
   26  | ELSE Statement SEMICOLON B

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP

   28 I: DO BEGINLOOP Statement SEMICOLON B ENDLOOP

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

   30 K: READ Var L

   31 L: %empty
   32  | COMMA Var

   33 M: WRITE Var L

   34 N: CONTINUE

   35 O: RETURN Expression

   36 Bool-Expr: Relation-And-Expr P

   37 P: %empty
   38  | OR Relation-And-Expr P

   39 Relation-And-Expr: Relation-Expr Q
   40                  | NOT Relation-Expr Q

   41 Q: %empty
   42  | AND Relation-Expr Q

   43 Relation-Expr: Expression Comp Expression
   44              | TRUE
   45              | FALSE
   46              | L_PAREN Bool-Expr R_PAREN

   47 Comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | LTE
   52     | GTE

   53 Expression: Multiplicative-Expr S T

   54 S: %empty
   55  | PLUS Multiplicative-Expr S T

   56 T: %empty
   57  | SUB Multiplicative-Expr S T

   58 Multiplicative-Expr: Term U V W

   59 U: %empty
   60  | MULT Term U V W

   61 V: %empty
   62  | DIV Term U V W

   63 W: %empty
   64  | MOD Term U V W

   65 Term: X Var
   66     | X NUMBER
   67     | X L_PAREN Expression R_PAREN
   68     | IDENT L_PAREN Y R_PAREN

   69 X: %empty
   70  | SUB

   71 Y: %empty
   72  | Expression Z

   73 Z: %empty
   74  | COMMA Expression Z

   75 Var: IDENT
   76    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
ARRAY (265) 13
OF (266) 13
IF (267) 24
THEN (268) 24
ENDIF (269) 24
ELSE (270) 26
WHILE (271) 27
DO (272) 28
FOREACH (273) 29
IN (274) 29
BEGINLOOP (275) 27 28 29
ENDLOOP (276) 27 28 29
CONTINUE (277) 34
READ (278) 30
WRITE (279) 33
AND (280) 42
OR (281) 38
NOT (282) 40
TRUE (283) 44
FALSE (284) 45
RETURN (285) 35
PLUS (286) 55
SUB (287) 57 70
MULT (288) 60
DIV (289) 62
MOD (290) 64
COLON (291) 9
COMMA (292) 11 32 74
L_PAREN (293) 46 67 68
R_PAREN (294) 46 67 68
L_SQUARE_BRACKET (295) 13 76
IDENT (296) 4 9 11 29 68 75 76
R_SQUARE_BRACKET (297) 13 76
ASSIGN (298) 23
NUMBER (299) 13 66
INTEGER (300) 9
SEMICOLON (301) 4 6 8 24 26 27 28 29
EQ (302) 47
NEQ (303) 48
LT (304) 49
GT (305) 50
LTE (306) 51
GTE (307) 52


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program_Prime (54)
    on left: 1, on right: 0
Program (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 4, on right: 3
A (57)
    on left: 5 6, on right: 4 6
B (58)
    on left: 7 8, on right: 4 8 24 26 27 28 29
Declaration (59)
    on left: 9, on right: 6
C (60)
    on left: 10 11, on right: 9 11
D (61)
    on left: 12 13, on right: 9
Statement (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 8 24 26 27 28 29
E (63)
    on left: 23, on right: 14
F (64)
    on left: 24, on right: 15
G (65)
    on left: 25 26, on right: 24
H (66)
    on left: 27, on right: 16
I (67)
    on left: 28, on right: 17
J (68)
    on left: 29, on right: 18
K (69)
    on left: 30, on right: 19
L (70)
    on left: 31 32, on right: 30 33
M (71)
    on left: 33, on right: 20
N (72)
    on left: 34, on right: 21
O (73)
    on left: 35, on right: 22
Bool-Expr (74)
    on left: 36, on right: 24 27 46
P (75)
    on left: 37 38, on right: 36 38
Relation-And-Expr (76)
    on left: 39 40, on right: 36 38
Q (77)
    on left: 41 42, on right: 39 40 42
Relation-Expr (78)
    on left: 43 44 45 46, on right: 39 40 42
Comp (79)
    on left: 47 48 49 50 51 52, on right: 43
Expression (80)
    on left: 53, on right: 23 35 43 67 72 74 76
S (81)
    on left: 54 55, on right: 53 55 57
T (82)
    on left: 56 57, on right: 53 55 57
Multiplicative-Expr (83)
    on left: 58, on right: 53 55 57
U (84)
    on left: 59 60, on right: 58 60 62 64
V (85)
    on left: 61 62, on right: 58 60 62 64
W (86)
    on left: 63 64, on right: 58 60 62 64
Term (87)
    on left: 65 66 67 68, on right: 58 60 62 64
X (88)
    on left: 69 70, on right: 65 66 67
Y (89)
    on left: 71 72, on right: 68
Z (90)
    on left: 73 74, on right: 72 74
Var (91)
    on left: 75 76, on right: 23 30 32 33 65


State 0

    0 $accept: . Program_Prime $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program_Prime  go to state 2
    Program        go to state 3
    Function       go to state 4


State 1

    4 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program_Prime . $end

    $end  shift, and go to state 6


State 3

    1 Program_Prime: Program .

    $default  reduce using rule 1 (Program_Prime)


State 4

    3 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 7
    Function  go to state 4


State 5

    4 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program_Prime $end .

    $default  accept


State 7

    3 Program: Function Program .

    $default  reduce using rule 3 (Program)


State 8

    4 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (A)

    A            go to state 11
    Declaration  go to state 12


State 10

    9 Declaration: IDENT . C COLON D INTEGER

    COMMA  shift, and go to state 13

    $default  reduce using rule 10 (C)

    C  go to state 14


State 11

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A . END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 A: Declaration . SEMICOLON A

    SEMICOLON  shift, and go to state 16


State 13

   11 C: COMMA . IDENT C

    IDENT  shift, and go to state 17


State 14

    9 Declaration: IDENT C . COLON D INTEGER

    COLON  shift, and go to state 18


State 15

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS . BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 A: Declaration SEMICOLON . A

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (A)

    A            go to state 20
    Declaration  go to state 12


State 17

   11 C: COMMA IDENT . C

    COMMA  shift, and go to state 13

    $default  reduce using rule 10 (C)

    C  go to state 21


State 18

    9 Declaration: IDENT C COLON . D INTEGER

    ARRAY  shift, and go to state 22

    $default  reduce using rule 12 (D)

    D  go to state 23


State 19

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS . A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (A)

    A            go to state 24
    Declaration  go to state 12


State 20

    6 A: Declaration SEMICOLON A .

    $default  reduce using rule 6 (A)


State 21

   11 C: COMMA IDENT C .

    $default  reduce using rule 11 (C)


State 22

   13 D: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    9 Declaration: IDENT C COLON D . INTEGER

    INTEGER  shift, and go to state 26


State 24

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A . END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    END_LOCALS  shift, and go to state 27


State 25

   13 D: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 28


State 26

    9 Declaration: IDENT C COLON D INTEGER .

    $default  reduce using rule 9 (Declaration)


State 27

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS . BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   13 D: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY . B SEMICOLON END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 40
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 30

   13 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 52


State 31

   24 F: IF . Bool-Expr THEN Statement SEMICOLON B G ENDIF SEMICOLON

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58

    L_PAREN   [reduce using rule 69 (X)]
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Bool-Expr            go to state 59
    Relation-And-Expr    go to state 60
    Relation-Expr        go to state 61
    Expression           go to state 62
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 32

   27 H: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58

    L_PAREN   [reduce using rule 69 (X)]
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Bool-Expr            go to state 66
    Relation-And-Expr    go to state 60
    Relation-Expr        go to state 61
    Expression           go to state 62
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 33

   28 I: DO . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 67


State 34

   29 J: FOREACH . IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT  shift, and go to state 68


State 35

   34 N: CONTINUE .

    $default  reduce using rule 34 (N)


State 36

   30 K: READ . Var L

    IDENT  shift, and go to state 39

    Var  go to state 69


State 37

   33 M: WRITE . Var L

    IDENT  shift, and go to state 39

    Var  go to state 70


State 38

   35 O: RETURN . Expression

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 71
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 39

   75 Var: IDENT .
   76    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 75 (Var)


State 40

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B . SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 73


State 41

    8 B: Statement . SEMICOLON B

    SEMICOLON  shift, and go to state 74


State 42

   14 Statement: E .

    $default  reduce using rule 14 (Statement)


State 43

   15 Statement: F .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: H .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: I .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: J .

    $default  reduce using rule 18 (Statement)


State 47

   19 Statement: K .

    $default  reduce using rule 19 (Statement)


State 48

   20 Statement: M .

    $default  reduce using rule 20 (Statement)


State 49

   21 Statement: N .

    $default  reduce using rule 21 (Statement)


State 50

   22 Statement: O .

    $default  reduce using rule 22 (Statement)


State 51

   23 E: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 75


State 52

   13 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 13 (D)


State 53

   40 Relation-And-Expr: NOT . Relation-Expr Q

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58

    L_PAREN   [reduce using rule 69 (X)]
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Relation-Expr        go to state 76
    Expression           go to state 62
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 54

   44 Relation-Expr: TRUE .

    $default  reduce using rule 44 (Relation-Expr)


State 55

   45 Relation-Expr: FALSE .

    $default  reduce using rule 45 (Relation-Expr)


State 56

   70 X: SUB .

    $default  reduce using rule 70 (X)


State 57

   46 Relation-Expr: L_PAREN . Bool-Expr R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58

    L_PAREN   [reduce using rule 69 (X)]
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Bool-Expr            go to state 77
    Relation-And-Expr    go to state 60
    Relation-Expr        go to state 61
    Expression           go to state 62
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 58

   68 Term: IDENT . L_PAREN Y R_PAREN

    L_PAREN  shift, and go to state 78


State 59

   24 F: IF Bool-Expr . THEN Statement SEMICOLON B G ENDIF SEMICOLON

    THEN  shift, and go to state 79


State 60

   36 Bool-Expr: Relation-And-Expr . P

    OR  shift, and go to state 80

    $default  reduce using rule 37 (P)

    P  go to state 81


State 61

   39 Relation-And-Expr: Relation-Expr . Q

    AND  shift, and go to state 82

    $default  reduce using rule 41 (Q)

    Q  go to state 83


State 62

   43 Relation-Expr: Expression . Comp Expression

    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    Comp  go to state 90


State 63

   53 Expression: Multiplicative-Expr . S T

    PLUS  shift, and go to state 91

    $default  reduce using rule 54 (S)

    S  go to state 92


State 64

   58 Multiplicative-Expr: Term . U V W

    MULT  shift, and go to state 93

    $default  reduce using rule 59 (U)

    U  go to state 94


State 65

   65 Term: X . Var
   66     | X . NUMBER
   67     | X . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 95
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 96

    Var  go to state 97


State 66

   27 H: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 67

   28 I: DO BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 99
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 68

   29 J: FOREACH IDENT . IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IN  shift, and go to state 100


State 69

   30 K: READ Var . L

    COMMA  shift, and go to state 101

    $default  reduce using rule 31 (L)

    L  go to state 102


State 70

   33 M: WRITE Var . L

    COMMA  shift, and go to state 101

    $default  reduce using rule 31 (L)

    L  go to state 103


State 71

   35 O: RETURN Expression .

    $default  reduce using rule 35 (O)


State 72

   76 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 104
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 73

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON . END_BODY

    END_BODY  shift, and go to state 105


State 74

    8 B: Statement SEMICOLON . B

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 106
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 75

   23 E: Var ASSIGN . Expression

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 107
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 76

   40 Relation-And-Expr: NOT Relation-Expr . Q

    AND  shift, and go to state 82

    $default  reduce using rule 41 (Q)

    Q  go to state 108


State 77

   46 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 109


State 78

   68 Term: IDENT L_PAREN . Y R_PAREN

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    R_PAREN   reduce using rule 71 (Y)
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 110
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65
    Y                    go to state 111


State 79

   24 F: IF Bool-Expr THEN . Statement SEMICOLON B G ENDIF SEMICOLON

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 112
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 80

   38 P: OR . Relation-And-Expr P

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58

    L_PAREN   [reduce using rule 69 (X)]
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Relation-And-Expr    go to state 113
    Relation-Expr        go to state 61
    Expression           go to state 62
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 81

   36 Bool-Expr: Relation-And-Expr P .

    $default  reduce using rule 36 (Bool-Expr)


State 82

   42 Q: AND . Relation-Expr Q

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58

    L_PAREN   [reduce using rule 69 (X)]
    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Relation-Expr        go to state 114
    Expression           go to state 62
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 83

   39 Relation-And-Expr: Relation-Expr Q .

    $default  reduce using rule 39 (Relation-And-Expr)


State 84

   47 Comp: EQ .

    $default  reduce using rule 47 (Comp)


State 85

   48 Comp: NEQ .

    $default  reduce using rule 48 (Comp)


State 86

   49 Comp: LT .

    $default  reduce using rule 49 (Comp)


State 87

   50 Comp: GT .

    $default  reduce using rule 50 (Comp)


State 88

   51 Comp: LTE .

    $default  reduce using rule 51 (Comp)


State 89

   52 Comp: GTE .

    $default  reduce using rule 52 (Comp)


State 90

   43 Relation-Expr: Expression Comp . Expression

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 115
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 91

   55 S: PLUS . Multiplicative-Expr S T

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Multiplicative-Expr  go to state 116
    Term                 go to state 64
    X                    go to state 65


State 92

   53 Expression: Multiplicative-Expr S . T

    SUB  shift, and go to state 117

    $default  reduce using rule 56 (T)

    T  go to state 118


State 93

   60 U: MULT . Term U V W

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Term  go to state 119
    X     go to state 65


State 94

   58 Multiplicative-Expr: Term U . V W

    DIV  shift, and go to state 120

    $default  reduce using rule 61 (V)

    V  go to state 121


State 95

   67 Term: X L_PAREN . Expression R_PAREN

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 122
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 96

   66 Term: X NUMBER .

    $default  reduce using rule 66 (Term)


State 97

   65 Term: X Var .

    $default  reduce using rule 65 (Term)


State 98

   27 H: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 123
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 99

   28 I: DO BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 124


State 100

   29 J: FOREACH IDENT IN . IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT  shift, and go to state 125


State 101

   32 L: COMMA . Var

    IDENT  shift, and go to state 39

    Var  go to state 126


State 102

   30 K: READ Var L .

    $default  reduce using rule 30 (K)


State 103

   33 M: WRITE Var L .

    $default  reduce using rule 33 (M)


State 104

   76 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 105

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY .

    $default  reduce using rule 4 (Function)


State 106

    8 B: Statement SEMICOLON B .

    $default  reduce using rule 8 (B)


State 107

   23 E: Var ASSIGN Expression .

    $default  reduce using rule 23 (E)


State 108

   40 Relation-And-Expr: NOT Relation-Expr Q .

    $default  reduce using rule 40 (Relation-And-Expr)


State 109

   46 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 46 (Relation-Expr)


State 110

   72 Y: Expression . Z

    COMMA  shift, and go to state 128

    $default  reduce using rule 73 (Z)

    Z  go to state 129


State 111

   68 Term: IDENT L_PAREN Y . R_PAREN

    R_PAREN  shift, and go to state 130


State 112

   24 F: IF Bool-Expr THEN Statement . SEMICOLON B G ENDIF SEMICOLON

    SEMICOLON  shift, and go to state 131


State 113

   38 P: OR Relation-And-Expr . P

    OR  shift, and go to state 80

    $default  reduce using rule 37 (P)

    P  go to state 132


State 114

   42 Q: AND Relation-Expr . Q

    AND  shift, and go to state 82

    $default  reduce using rule 41 (Q)

    Q  go to state 133


State 115

   43 Relation-Expr: Expression Comp Expression .

    $default  reduce using rule 43 (Relation-Expr)


State 116

   55 S: PLUS Multiplicative-Expr . S T

    PLUS  shift, and go to state 91

    $default  reduce using rule 54 (S)

    S  go to state 134


State 117

   57 T: SUB . Multiplicative-Expr S T

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Multiplicative-Expr  go to state 135
    Term                 go to state 64
    X                    go to state 65


State 118

   53 Expression: Multiplicative-Expr S T .

    $default  reduce using rule 53 (Expression)


State 119

   60 U: MULT Term . U V W

    MULT  shift, and go to state 93

    $default  reduce using rule 59 (U)

    U  go to state 136


State 120

   62 V: DIV . Term U V W

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Term  go to state 137
    X     go to state 65


State 121

   58 Multiplicative-Expr: Term U V . W

    MOD  shift, and go to state 138

    $default  reduce using rule 63 (W)

    W  go to state 139


State 122

   67 Term: X L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 140


State 123

   27 H: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 141


State 124

   28 I: DO BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 142
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 125

   29 J: FOREACH IDENT IN IDENT . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 143


State 126

   32 L: COMMA Var .

    $default  reduce using rule 32 (L)


State 127

   76 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 76 (Var)


State 128

   74 Z: COMMA . Expression Z

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Expression           go to state 144
    Multiplicative-Expr  go to state 63
    Term                 go to state 64
    X                    go to state 65


State 129

   72 Y: Expression Z .

    $default  reduce using rule 72 (Y)


State 130

   68 Term: IDENT L_PAREN Y R_PAREN .

    $default  reduce using rule 68 (Term)


State 131

   24 F: IF Bool-Expr THEN Statement SEMICOLON . B G ENDIF SEMICOLON

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 145
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 132

   38 P: OR Relation-And-Expr P .

    $default  reduce using rule 38 (P)


State 133

   42 Q: AND Relation-Expr Q .

    $default  reduce using rule 42 (Q)


State 134

   55 S: PLUS Multiplicative-Expr S . T

    SUB  shift, and go to state 117

    SUB       [reduce using rule 56 (T)]
    $default  reduce using rule 56 (T)

    T  go to state 146


State 135

   57 T: SUB Multiplicative-Expr . S T

    PLUS  shift, and go to state 91

    $default  reduce using rule 54 (S)

    S  go to state 147


State 136

   60 U: MULT Term U . V W

    DIV  shift, and go to state 120

    DIV       [reduce using rule 61 (V)]
    $default  reduce using rule 61 (V)

    V  go to state 148


State 137

   62 V: DIV Term . U V W

    MULT  shift, and go to state 93

    $default  reduce using rule 59 (U)

    U  go to state 149


State 138

   64 W: MOD . Term U V W

    SUB    shift, and go to state 56
    IDENT  shift, and go to state 58

    IDENT     [reduce using rule 69 (X)]
    $default  reduce using rule 69 (X)

    Term  go to state 150
    X     go to state 65


State 139

   58 Multiplicative-Expr: Term U V W .

    $default  reduce using rule 58 (Multiplicative-Expr)


State 140

   67 Term: X L_PAREN Expression R_PAREN .

    $default  reduce using rule 67 (Term)


State 141

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 151
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 142

   28 I: DO BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 152


State 143

   29 J: FOREACH IDENT IN IDENT BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 153
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 144

   74 Z: COMMA Expression . Z

    COMMA  shift, and go to state 128

    $default  reduce using rule 73 (Z)

    Z  go to state 154


State 145

   24 F: IF Bool-Expr THEN Statement SEMICOLON B . G ENDIF SEMICOLON

    ELSE  shift, and go to state 155

    $default  reduce using rule 25 (G)

    G  go to state 156


State 146

   55 S: PLUS Multiplicative-Expr S T .

    $default  reduce using rule 55 (S)


State 147

   57 T: SUB Multiplicative-Expr S . T

    SUB  shift, and go to state 117

    SUB       [reduce using rule 56 (T)]
    $default  reduce using rule 56 (T)

    T  go to state 157


State 148

   60 U: MULT Term U V . W

    MOD  shift, and go to state 138

    MOD       [reduce using rule 63 (W)]
    $default  reduce using rule 63 (W)

    W  go to state 158


State 149

   62 V: DIV Term U . V W

    DIV  shift, and go to state 120

    DIV       [reduce using rule 61 (V)]
    $default  reduce using rule 61 (V)

    V  go to state 159


State 150

   64 W: MOD Term . U V W

    MULT  shift, and go to state 93

    $default  reduce using rule 59 (U)

    U  go to state 160


State 151

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 161


State 152

   28 I: DO BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 28 (I)


State 153

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 162


State 154

   74 Z: COMMA Expression Z .

    $default  reduce using rule 74 (Z)


State 155

   26 G: ELSE . Statement SEMICOLON B

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 163
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 156

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G . ENDIF SEMICOLON

    ENDIF  shift, and go to state 164


State 157

   57 T: SUB Multiplicative-Expr S T .

    $default  reduce using rule 57 (T)


State 158

   60 U: MULT Term U V W .

    $default  reduce using rule 60 (U)


State 159

   62 V: DIV Term U V . W

    MOD  shift, and go to state 138

    MOD       [reduce using rule 63 (W)]
    $default  reduce using rule 63 (W)

    W  go to state 165


State 160

   64 W: MOD Term U . V W

    DIV  shift, and go to state 120

    DIV       [reduce using rule 61 (V)]
    $default  reduce using rule 61 (V)

    V  go to state 166


State 161

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 27 (H)


State 162

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 167
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 163

   26 G: ELSE Statement . SEMICOLON B

    SEMICOLON  shift, and go to state 168


State 164

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 169


State 165

   62 V: DIV Term U V W .

    $default  reduce using rule 62 (V)


State 166

   64 W: MOD Term U V . W

    MOD  shift, and go to state 138

    MOD       [reduce using rule 63 (W)]
    $default  reduce using rule 63 (W)

    W  go to state 170


State 167

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 171


State 168

   26 G: ELSE Statement SEMICOLON . B

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 172
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 169

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF SEMICOLON .

    $default  reduce using rule 24 (F)


State 170

   64 W: MOD Term U V W .

    $default  reduce using rule 64 (W)


State 171

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 29 (J)


State 172

   26 G: ELSE Statement SEMICOLON B .

    $default  reduce using rule 26 (G)
