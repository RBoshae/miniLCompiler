State 141 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program_Prime $end

    1 Program_Prime: Program

    2 Program: %empty
    3        | Function Program

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    5 Alpha: %empty
    6      | Declaration SEMICOLON Alpha

    7 Beta: Statement SEMICOLON
    8     | Statement SEMICOLON Beta

    9 Declaration: identifiers C COLON D mInteger

   10 mInteger: INTEGER

   11 C: %empty
   12  | COMMA identifiers C

   13 D: %empty
   14  | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

   15 Statement: E
   16          | F
   17          | H
   18          | I
   19          | J
   20          | K
   21          | WRITE Var Lima
   22          | WRITE Var
   23          | CONTINUE
   24          | RETURN Expression

   25 E: Var ASSIGN Expression

   26 F: IF Bool-Expr THEN Statement SEMICOLON Beta G ENDIF
   27  | IF Bool-Expr THEN Statement SEMICOLON G ENDIF

   28 G: %empty
   29  | ELSE Statement SEMICOLON
   30  | ELSE Statement SEMICOLON Beta

   31 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP
   32  | WHILE Bool-Expr BEGINLOOP Statement SEMICOLON Beta ENDLOOP

   33 I: DO BEGINLOOP Statement SEMICOLON ENDLOOP
   34  | DO BEGINLOOP Statement SEMICOLON Beta ENDLOOP

   35 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   36  | FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

   37 K: READ Var Lima
   38  | READ Var

   39 Lima: COMMA Var
   40     | COMMA Var Lima

   41 Bool-Expr: Relation-And-Expr Papa
   42          | Relation-And-Expr

   43 Papa: OR Relation-And-Expr
   44     | OR Relation-And-Expr Papa

   45 Relation-And-Expr: Relation-Expr Quebec
   46                  | Relation-Expr

   47 Quebec: AND Relation-Expr
   48       | AND Relation-Expr Quebec

   49 Relation-Expr: Expression Comp Expression
   50              | NOT Expression Comp Expression
   51              | TRUE
   52              | NOT TRUE
   53              | FALSE
   54              | NOT FALSE
   55              | L_PAREN Bool-Expr R_PAREN
   56              | NOT L_PAREN Bool-Expr R_PAREN

   57 Comp: EQ
   58     | NEQ
   59     | LT
   60     | GT
   61     | LTE
   62     | GTE

   63 Expression: Multiplicative-Expr S T

   64 S: %empty
   65  | PLUS Multiplicative-Expr S T

   66 T: %empty
   67  | SUB Multiplicative-Expr S T

   68 Multiplicative-Expr: Term U V W

   69 U: %empty
   70  | MULT Term U V W

   71 V: %empty
   72  | DIV Term U V W

   73 W: %empty
   74  | MOD Term U V W

   75 Term: Var
   76     | SUB Var
   77     | NUMBER
   78     | SUB NUMBER
   79     | L_PAREN Expression R_PAREN
   80     | SUB L_PAREN Expression R_PAREN
   81     | identifiers L_PAREN Y R_PAREN

   82 Y: %empty
   83  | Expression Z

   84 Z: %empty
   85  | COMMA Expression Z

   86 Var: identifiers
   87    | identifiers L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   88 identifiers: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 88
FUNCTION (259) 4
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
ARRAY (265) 14
OF (266) 14
IF (267) 26 27
THEN (268) 26 27
ENDIF (269) 26 27
ELSE (270) 29 30
WHILE (271) 31 32
DO (272) 33 34
FOREACH (273) 35 36
IN (274) 35 36
BEGINLOOP (275) 31 32 33 34 35 36
ENDLOOP (276) 31 32 33 34 35 36
CONTINUE (277) 23
READ (278) 37 38
WRITE (279) 21 22
TRUE (280) 51 52
FALSE (281) 53 54
RETURN (282) 24
COLON (283) 9
COMMA (284) 12 39 40 85
NUMBER (285) 14 77 78
INTEGER (286) 10
END_BODY (287) 4
SEMICOLON (288) 4 6 7 8 26 27 29 30 31 32 33 34 35 36
AND (289) 47 48
OR (290) 43 44
ASSIGN (291) 25
NOT (292) 50 52 54 56
PLUS (293) 65
SUB (294) 67 76 78 80
MULT (295) 70
DIV (296) 72
MOD (297) 74
L_SQUARE_BRACKET (298) 14 87
R_SQUARE_BRACKET (299) 14 87
L_PAREN (300) 55 56 79 80 81
EQ (301) 57
NEQ (302) 58
LT (303) 59
GT (304) 60
LTE (305) 61
GTE (306) 62
R_PAREN (307) 55 56 79 80 81


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program_Prime (54)
    on left: 1, on right: 0
Program (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 4, on right: 3
Alpha (57)
    on left: 5 6, on right: 4 6
Beta (58)
    on left: 7 8, on right: 4 8 26 30 32 34 35
Declaration (59)
    on left: 9, on right: 6
mInteger (60)
    on left: 10, on right: 9
C (61)
    on left: 11 12, on right: 9 12
D (62)
    on left: 13 14, on right: 9
Statement (63)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 7 8 26 27 29
    30 31 32 33 34 35 36
E (64)
    on left: 25, on right: 15
F (65)
    on left: 26 27, on right: 16
G (66)
    on left: 28 29 30, on right: 26 27
H (67)
    on left: 31 32, on right: 17
I (68)
    on left: 33 34, on right: 18
J (69)
    on left: 35 36, on right: 19
K (70)
    on left: 37 38, on right: 20
Lima (71)
    on left: 39 40, on right: 21 37 40
Bool-Expr (72)
    on left: 41 42, on right: 26 27 31 32 55 56
Papa (73)
    on left: 43 44, on right: 41 44
Relation-And-Expr (74)
    on left: 45 46, on right: 41 42 43 44
Quebec (75)
    on left: 47 48, on right: 45 48
Relation-Expr (76)
    on left: 49 50 51 52 53 54 55 56, on right: 45 46 47 48
Comp (77)
    on left: 57 58 59 60 61 62, on right: 49 50
Expression (78)
    on left: 63, on right: 24 25 49 50 79 80 83 85 87
S (79)
    on left: 64 65, on right: 63 65 67
T (80)
    on left: 66 67, on right: 63 65 67
Multiplicative-Expr (81)
    on left: 68, on right: 63 65 67
U (82)
    on left: 69 70, on right: 68 70 72 74
V (83)
    on left: 71 72, on right: 68 70 72 74
W (84)
    on left: 73 74, on right: 68 70 72 74
Term (85)
    on left: 75 76 77 78 79 80 81, on right: 68 70 72 74
Y (86)
    on left: 82 83, on right: 81
Z (87)
    on left: 84 85, on right: 83 85
Var (88)
    on left: 86 87, on right: 21 22 25 37 38 39 40 75 76
identifiers (89)
    on left: 88, on right: 4 9 12 35 36 81 86 87


State 0

    0 $accept: . Program_Prime $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program_Prime  go to state 2
    Program        go to state 3
    Function       go to state 4


State 1

    4 Function: FUNCTION . identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    IDENT  shift, and go to state 5

    identifiers  go to state 6


State 2

    0 $accept: Program_Prime . $end

    $end  shift, and go to state 7


State 3

    1 Program_Prime: Program .

    $default  reduce using rule 1 (Program_Prime)


State 4

    3 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 8
    Function  go to state 4


State 5

   88 identifiers: IDENT .

    $default  reduce using rule 88 (identifiers)


State 6

    4 Function: FUNCTION identifiers . SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program_Prime $end .

    $default  accept


State 8

    3 Program: Function Program .

    $default  reduce using rule 3 (Program)


State 9

    4 Function: FUNCTION identifiers SEMICOLON . BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS . Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 11
    Declaration  go to state 12
    identifiers  go to state 13


State 11

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha . END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    END_PARAMS  shift, and go to state 14


State 12

    6 Alpha: Declaration . SEMICOLON Alpha

    SEMICOLON  shift, and go to state 15


State 13

    9 Declaration: identifiers . C COLON D mInteger

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (C)

    C  go to state 17


State 14

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS . BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    6 Alpha: Declaration SEMICOLON . Alpha

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 19
    Declaration  go to state 12
    identifiers  go to state 13


State 16

   12 C: COMMA . identifiers C

    IDENT  shift, and go to state 5

    identifiers  go to state 20


State 17

    9 Declaration: identifiers C . COLON D mInteger

    COLON  shift, and go to state 21


State 18

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS . Alpha END_LOCALS BEGIN_BODY Beta END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 22
    Declaration  go to state 12
    identifiers  go to state 13


State 19

    6 Alpha: Declaration SEMICOLON Alpha .

    $default  reduce using rule 6 (Alpha)


State 20

   12 C: COMMA identifiers . C

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (C)

    C  go to state 23


State 21

    9 Declaration: identifiers C COLON . D mInteger

    ARRAY  shift, and go to state 24

    $default  reduce using rule 13 (D)

    D  go to state 25


State 22

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha . END_LOCALS BEGIN_BODY Beta END_BODY

    END_LOCALS  shift, and go to state 26


State 23

   12 C: COMMA identifiers C .

    $default  reduce using rule 12 (C)


State 24

   14 D: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

    9 Declaration: identifiers C COLON D . mInteger

    INTEGER  shift, and go to state 28

    mInteger  go to state 29


State 26

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS . BEGIN_BODY Beta END_BODY

    BEGIN_BODY  shift, and go to state 30


State 27

   14 D: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 31


State 28

   10 mInteger: INTEGER .

    $default  reduce using rule 10 (mInteger)


State 29

    9 Declaration: identifiers C COLON D mInteger .

    $default  reduce using rule 9 (Declaration)


State 30

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY . Beta END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Beta         go to state 40
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 31

   14 D: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 50


State 32

   26 F: IF . Bool-Expr THEN Statement SEMICOLON Beta G ENDIF
   27  | IF . Bool-Expr THEN Statement SEMICOLON G ENDIF

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    NUMBER   shift, and go to state 53
    NOT      shift, and go to state 54
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Bool-Expr            go to state 57
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 33

   31 H: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP
   32  | WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON Beta ENDLOOP

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    NUMBER   shift, and go to state 53
    NOT      shift, and go to state 54
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Bool-Expr            go to state 65
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 34

   33 I: DO . BEGINLOOP Statement SEMICOLON ENDLOOP
   34  | DO . BEGINLOOP Statement SEMICOLON Beta ENDLOOP

    BEGINLOOP  shift, and go to state 66


State 35

   35 J: FOREACH . identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   36  | FOREACH . identifiers IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 5

    identifiers  go to state 67


State 36

   23 Statement: CONTINUE .

    $default  reduce using rule 23 (Statement)


State 37

   37 K: READ . Var Lima
   38  | READ . Var

    IDENT  shift, and go to state 5

    Var          go to state 68
    identifiers  go to state 49


State 38

   21 Statement: WRITE . Var Lima
   22          | WRITE . Var

    IDENT  shift, and go to state 5

    Var          go to state 69
    identifiers  go to state 49


State 39

   24 Statement: RETURN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 71
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 40

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta . END_BODY

    END_BODY  shift, and go to state 72


State 41

    7 Beta: Statement . SEMICOLON
    8     | Statement . SEMICOLON Beta

    SEMICOLON  shift, and go to state 73


State 42

   15 Statement: E .

    $default  reduce using rule 15 (Statement)


State 43

   16 Statement: F .

    $default  reduce using rule 16 (Statement)


State 44

   17 Statement: H .

    $default  reduce using rule 17 (Statement)


State 45

   18 Statement: I .

    $default  reduce using rule 18 (Statement)


State 46

   19 Statement: J .

    $default  reduce using rule 19 (Statement)


State 47

   20 Statement: K .

    $default  reduce using rule 20 (Statement)


State 48

   25 E: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 74


State 49

   86 Var: identifiers .
   87    | identifiers . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75

    $default  reduce using rule 86 (Var)


State 50

   14 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 76


State 51

   51 Relation-Expr: TRUE .

    $default  reduce using rule 51 (Relation-Expr)


State 52

   53 Relation-Expr: FALSE .

    $default  reduce using rule 53 (Relation-Expr)


State 53

   77 Term: NUMBER .

    $default  reduce using rule 77 (Term)


State 54

   50 Relation-Expr: NOT . Expression Comp Expression
   52              | NOT . TRUE
   54              | NOT . FALSE
   56              | NOT . L_PAREN Bool-Expr R_PAREN

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 79

    Expression           go to state 80
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 55

   76 Term: SUB . Var
   78     | SUB . NUMBER
   80     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 81
    L_PAREN  shift, and go to state 82

    Var          go to state 83
    identifiers  go to state 49


State 56

   55 Relation-Expr: L_PAREN . Bool-Expr R_PAREN
   79 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    NUMBER   shift, and go to state 53
    NOT      shift, and go to state 54
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Bool-Expr            go to state 84
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 85
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 57

   26 F: IF Bool-Expr . THEN Statement SEMICOLON Beta G ENDIF
   27  | IF Bool-Expr . THEN Statement SEMICOLON G ENDIF

    THEN  shift, and go to state 86


State 58

   41 Bool-Expr: Relation-And-Expr . Papa
   42          | Relation-And-Expr .

    OR  shift, and go to state 87

    $default  reduce using rule 42 (Bool-Expr)

    Papa  go to state 88


State 59

   45 Relation-And-Expr: Relation-Expr . Quebec
   46                  | Relation-Expr .

    AND  shift, and go to state 89

    $default  reduce using rule 46 (Relation-And-Expr)

    Quebec  go to state 90


State 60

   49 Relation-Expr: Expression . Comp Expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94
    LTE  shift, and go to state 95
    GTE  shift, and go to state 96

    Comp  go to state 97


State 61

   63 Expression: Multiplicative-Expr . S T

    PLUS  shift, and go to state 98

    $default  reduce using rule 64 (S)

    S  go to state 99


State 62

   68 Multiplicative-Expr: Term . U V W

    MULT  shift, and go to state 100

    $default  reduce using rule 69 (U)

    U  go to state 101


State 63

   75 Term: Var .

    $default  reduce using rule 75 (Term)


State 64

   81 Term: identifiers . L_PAREN Y R_PAREN
   86 Var: identifiers .
   87    | identifiers . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75
    L_PAREN           shift, and go to state 102

    $default  reduce using rule 86 (Var)


State 65

   31 H: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON ENDLOOP
   32  | WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON Beta ENDLOOP

    BEGINLOOP  shift, and go to state 103


State 66

   33 I: DO BEGINLOOP . Statement SEMICOLON ENDLOOP
   34  | DO BEGINLOOP . Statement SEMICOLON Beta ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Statement    go to state 104
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 67

   35 J: FOREACH identifiers . IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   36  | FOREACH identifiers . IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

    IN  shift, and go to state 105


State 68

   37 K: READ Var . Lima
   38  | READ Var .

    COMMA  shift, and go to state 106

    $default  reduce using rule 38 (K)

    Lima  go to state 107


State 69

   21 Statement: WRITE Var . Lima
   22          | WRITE Var .

    COMMA  shift, and go to state 106

    $default  reduce using rule 22 (Statement)

    Lima  go to state 108


State 70

   79 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 109
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 71

   24 Statement: RETURN Expression .

    $default  reduce using rule 24 (Statement)


State 72

    4 Function: FUNCTION identifiers SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY Beta END_BODY .

    $default  reduce using rule 4 (Function)


State 73

    7 Beta: Statement SEMICOLON .
    8     | Statement SEMICOLON . Beta

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    $default  reduce using rule 7 (Beta)

    Beta         go to state 110
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 74

   25 E: Var ASSIGN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 111
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 75

   87 Var: identifiers L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 112
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 76

   14 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 14 (D)


State 77

   52 Relation-Expr: NOT TRUE .

    $default  reduce using rule 52 (Relation-Expr)


State 78

   54 Relation-Expr: NOT FALSE .

    $default  reduce using rule 54 (Relation-Expr)


State 79

   56 Relation-Expr: NOT L_PAREN . Bool-Expr R_PAREN
   79 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    NUMBER   shift, and go to state 53
    NOT      shift, and go to state 54
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Bool-Expr            go to state 113
    Relation-And-Expr    go to state 58
    Relation-Expr        go to state 59
    Expression           go to state 85
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 80

   50 Relation-Expr: NOT Expression . Comp Expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94
    LTE  shift, and go to state 95
    GTE  shift, and go to state 96

    Comp  go to state 114


State 81

   78 Term: SUB NUMBER .

    $default  reduce using rule 78 (Term)


State 82

   80 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 115
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 83

   76 Term: SUB Var .

    $default  reduce using rule 76 (Term)


State 84

   55 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 116


State 85

   49 Relation-Expr: Expression . Comp Expression
   79 Term: L_PAREN Expression . R_PAREN

    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92
    LT       shift, and go to state 93
    GT       shift, and go to state 94
    LTE      shift, and go to state 95
    GTE      shift, and go to state 96
    R_PAREN  shift, and go to state 117

    Comp  go to state 97


State 86

   26 F: IF Bool-Expr THEN . Statement SEMICOLON Beta G ENDIF
   27  | IF Bool-Expr THEN . Statement SEMICOLON G ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Statement    go to state 118
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 87

   43 Papa: OR . Relation-And-Expr
   44     | OR . Relation-And-Expr Papa

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    NUMBER   shift, and go to state 53
    NOT      shift, and go to state 54
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Relation-And-Expr    go to state 119
    Relation-Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 88

   41 Bool-Expr: Relation-And-Expr Papa .

    $default  reduce using rule 41 (Bool-Expr)


State 89

   47 Quebec: AND . Relation-Expr
   48       | AND . Relation-Expr Quebec

    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    NUMBER   shift, and go to state 53
    NOT      shift, and go to state 54
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Relation-Expr        go to state 120
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 90

   45 Relation-And-Expr: Relation-Expr Quebec .

    $default  reduce using rule 45 (Relation-And-Expr)


State 91

   57 Comp: EQ .

    $default  reduce using rule 57 (Comp)


State 92

   58 Comp: NEQ .

    $default  reduce using rule 58 (Comp)


State 93

   59 Comp: LT .

    $default  reduce using rule 59 (Comp)


State 94

   60 Comp: GT .

    $default  reduce using rule 60 (Comp)


State 95

   61 Comp: LTE .

    $default  reduce using rule 61 (Comp)


State 96

   62 Comp: GTE .

    $default  reduce using rule 62 (Comp)


State 97

   49 Relation-Expr: Expression Comp . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 121
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 98

   65 S: PLUS . Multiplicative-Expr S T

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Multiplicative-Expr  go to state 122
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 99

   63 Expression: Multiplicative-Expr S . T

    SUB  shift, and go to state 123

    $default  reduce using rule 66 (T)

    T  go to state 124


State 100

   70 U: MULT . Term U V W

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Term         go to state 125
    Var          go to state 63
    identifiers  go to state 64


State 101

   68 Multiplicative-Expr: Term U . V W

    DIV  shift, and go to state 126

    $default  reduce using rule 71 (V)

    V  go to state 127


State 102

   81 Term: identifiers L_PAREN . Y R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    $default  reduce using rule 82 (Y)

    Expression           go to state 128
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Y                    go to state 129
    Var                  go to state 63
    identifiers          go to state 64


State 103

   31 H: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON ENDLOOP
   32  | WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON Beta ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Statement    go to state 130
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 104

   33 I: DO BEGINLOOP Statement . SEMICOLON ENDLOOP
   34  | DO BEGINLOOP Statement . SEMICOLON Beta ENDLOOP

    SEMICOLON  shift, and go to state 131


State 105

   35 J: FOREACH identifiers IN . identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   36  | FOREACH identifiers IN . identifiers BEGINLOOP Statement SEMICOLON ENDLOOP

    IDENT  shift, and go to state 5

    identifiers  go to state 132


State 106

   39 Lima: COMMA . Var
   40     | COMMA . Var Lima

    IDENT  shift, and go to state 5

    Var          go to state 133
    identifiers  go to state 49


State 107

   37 K: READ Var Lima .

    $default  reduce using rule 37 (K)


State 108

   21 Statement: WRITE Var Lima .

    $default  reduce using rule 21 (Statement)


State 109

   79 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 117


State 110

    8 Beta: Statement SEMICOLON Beta .

    $default  reduce using rule 8 (Beta)


State 111

   25 E: Var ASSIGN Expression .

    $default  reduce using rule 25 (E)


State 112

   87 Var: identifiers L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 134


State 113

   56 Relation-Expr: NOT L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 135


State 114

   50 Relation-Expr: NOT Expression Comp . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 136
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 115

   80 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 137


State 116

   55 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 55 (Relation-Expr)


State 117

   79 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 79 (Term)


State 118

   26 F: IF Bool-Expr THEN Statement . SEMICOLON Beta G ENDIF
   27  | IF Bool-Expr THEN Statement . SEMICOLON G ENDIF

    SEMICOLON  shift, and go to state 138


State 119

   43 Papa: OR Relation-And-Expr .
   44     | OR Relation-And-Expr . Papa

    OR  shift, and go to state 87

    $default  reduce using rule 43 (Papa)

    Papa  go to state 139


State 120

   47 Quebec: AND Relation-Expr .
   48       | AND Relation-Expr . Quebec

    AND  shift, and go to state 89

    $default  reduce using rule 47 (Quebec)

    Quebec  go to state 140


State 121

   49 Relation-Expr: Expression Comp Expression .

    $default  reduce using rule 49 (Relation-Expr)


State 122

   65 S: PLUS Multiplicative-Expr . S T

    PLUS  shift, and go to state 98

    $default  reduce using rule 64 (S)

    S  go to state 141


State 123

   67 T: SUB . Multiplicative-Expr S T

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Multiplicative-Expr  go to state 142
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 124

   63 Expression: Multiplicative-Expr S T .

    $default  reduce using rule 63 (Expression)


State 125

   70 U: MULT Term . U V W

    MULT  shift, and go to state 100

    $default  reduce using rule 69 (U)

    U  go to state 143


State 126

   72 V: DIV . Term U V W

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Term         go to state 144
    Var          go to state 63
    identifiers  go to state 64


State 127

   68 Multiplicative-Expr: Term U V . W

    MOD  shift, and go to state 145

    $default  reduce using rule 73 (W)

    W  go to state 146


State 128

   83 Y: Expression . Z

    COMMA  shift, and go to state 147

    $default  reduce using rule 84 (Z)

    Z  go to state 148


State 129

   81 Term: identifiers L_PAREN Y . R_PAREN

    R_PAREN  shift, and go to state 149


State 130

   31 H: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON ENDLOOP
   32  | WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON Beta ENDLOOP

    SEMICOLON  shift, and go to state 150


State 131

   33 I: DO BEGINLOOP Statement SEMICOLON . ENDLOOP
   34  | DO BEGINLOOP Statement SEMICOLON . Beta ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    ENDLOOP   shift, and go to state 151
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Beta         go to state 152
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 132

   35 J: FOREACH identifiers IN identifiers . BEGINLOOP Statement SEMICOLON Beta ENDLOOP
   36  | FOREACH identifiers IN identifiers . BEGINLOOP Statement SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 153


State 133

   39 Lima: COMMA Var .
   40     | COMMA Var . Lima

    COMMA  shift, and go to state 106

    $default  reduce using rule 39 (Lima)

    Lima  go to state 154


State 134

   87 Var: identifiers L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 87 (Var)


State 135

   56 Relation-Expr: NOT L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 56 (Relation-Expr)


State 136

   50 Relation-Expr: NOT Expression Comp Expression .

    $default  reduce using rule 50 (Relation-Expr)


State 137

   80 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 80 (Term)


State 138

   26 F: IF Bool-Expr THEN Statement SEMICOLON . Beta G ENDIF
   27  | IF Bool-Expr THEN Statement SEMICOLON . G ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    ELSE      shift, and go to state 155
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    $default  reduce using rule 28 (G)

    Beta         go to state 156
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    G            go to state 157
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 139

   44 Papa: OR Relation-And-Expr Papa .

    $default  reduce using rule 44 (Papa)


State 140

   48 Quebec: AND Relation-Expr Quebec .

    $default  reduce using rule 48 (Quebec)


State 141

   65 S: PLUS Multiplicative-Expr S . T

    SUB  shift, and go to state 123

    SUB       [reduce using rule 66 (T)]
    $default  reduce using rule 66 (T)

    T  go to state 158


State 142

   67 T: SUB Multiplicative-Expr . S T

    PLUS  shift, and go to state 98

    $default  reduce using rule 64 (S)

    S  go to state 159


State 143

   70 U: MULT Term U . V W

    DIV  shift, and go to state 126

    DIV       [reduce using rule 71 (V)]
    $default  reduce using rule 71 (V)

    V  go to state 160


State 144

   72 V: DIV Term . U V W

    MULT  shift, and go to state 100

    $default  reduce using rule 69 (U)

    U  go to state 161


State 145

   74 W: MOD . Term U V W

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Term         go to state 162
    Var          go to state 63
    identifiers  go to state 64


State 146

   68 Multiplicative-Expr: Term U V W .

    $default  reduce using rule 68 (Multiplicative-Expr)


State 147

   85 Z: COMMA . Expression Z

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 70

    Expression           go to state 163
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Var                  go to state 63
    identifiers          go to state 64


State 148

   83 Y: Expression Z .

    $default  reduce using rule 83 (Y)


State 149

   81 Term: identifiers L_PAREN Y R_PAREN .

    $default  reduce using rule 81 (Term)


State 150

   31 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . ENDLOOP
   32  | WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . Beta ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    ENDLOOP   shift, and go to state 164
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Beta         go to state 165
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 151

   33 I: DO BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 33 (I)


State 152

   34 I: DO BEGINLOOP Statement SEMICOLON Beta . ENDLOOP

    ENDLOOP  shift, and go to state 166


State 153

   35 J: FOREACH identifiers IN identifiers BEGINLOOP . Statement SEMICOLON Beta ENDLOOP
   36  | FOREACH identifiers IN identifiers BEGINLOOP . Statement SEMICOLON ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Statement    go to state 167
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 154

   40 Lima: COMMA Var Lima .

    $default  reduce using rule 40 (Lima)


State 155

   29 G: ELSE . Statement SEMICOLON
   30  | ELSE . Statement SEMICOLON Beta

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Statement    go to state 168
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 156

   26 F: IF Bool-Expr THEN Statement SEMICOLON Beta . G ENDIF

    ELSE  shift, and go to state 155

    $default  reduce using rule 28 (G)

    G  go to state 169


State 157

   27 F: IF Bool-Expr THEN Statement SEMICOLON G . ENDIF

    ENDIF  shift, and go to state 170


State 158

   65 S: PLUS Multiplicative-Expr S T .

    $default  reduce using rule 65 (S)


State 159

   67 T: SUB Multiplicative-Expr S . T

    SUB  shift, and go to state 123

    SUB       [reduce using rule 66 (T)]
    $default  reduce using rule 66 (T)

    T  go to state 171


State 160

   70 U: MULT Term U V . W

    MOD  shift, and go to state 145

    MOD       [reduce using rule 73 (W)]
    $default  reduce using rule 73 (W)

    W  go to state 172


State 161

   72 V: DIV Term U . V W

    DIV  shift, and go to state 126

    DIV       [reduce using rule 71 (V)]
    $default  reduce using rule 71 (V)

    V  go to state 173


State 162

   74 W: MOD Term . U V W

    MULT  shift, and go to state 100

    $default  reduce using rule 69 (U)

    U  go to state 174


State 163

   85 Z: COMMA Expression . Z

    COMMA  shift, and go to state 147

    $default  reduce using rule 84 (Z)

    Z  go to state 175


State 164

   31 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 31 (H)


State 165

   32 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON Beta . ENDLOOP

    ENDLOOP  shift, and go to state 176


State 166

   34 I: DO BEGINLOOP Statement SEMICOLON Beta ENDLOOP .

    $default  reduce using rule 34 (I)


State 167

   35 J: FOREACH identifiers IN identifiers BEGINLOOP Statement . SEMICOLON Beta ENDLOOP
   36  | FOREACH identifiers IN identifiers BEGINLOOP Statement . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 177


State 168

   29 G: ELSE Statement . SEMICOLON
   30  | ELSE Statement . SEMICOLON Beta

    SEMICOLON  shift, and go to state 178


State 169

   26 F: IF Bool-Expr THEN Statement SEMICOLON Beta G . ENDIF

    ENDIF  shift, and go to state 179


State 170

   27 F: IF Bool-Expr THEN Statement SEMICOLON G ENDIF .

    $default  reduce using rule 27 (F)


State 171

   67 T: SUB Multiplicative-Expr S T .

    $default  reduce using rule 67 (T)


State 172

   70 U: MULT Term U V W .

    $default  reduce using rule 70 (U)


State 173

   72 V: DIV Term U V . W

    MOD  shift, and go to state 145

    MOD       [reduce using rule 73 (W)]
    $default  reduce using rule 73 (W)

    W  go to state 180


State 174

   74 W: MOD Term U . V W

    DIV  shift, and go to state 126

    DIV       [reduce using rule 71 (V)]
    $default  reduce using rule 71 (V)

    V  go to state 181


State 175

   85 Z: COMMA Expression Z .

    $default  reduce using rule 85 (Z)


State 176

   32 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON Beta ENDLOOP .

    $default  reduce using rule 32 (H)


State 177

   35 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON . Beta ENDLOOP
   36  | FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON . ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    ENDLOOP   shift, and go to state 182
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    Beta         go to state 183
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 178

   29 G: ELSE Statement SEMICOLON .
   30  | ELSE Statement SEMICOLON . Beta

    IDENT     shift, and go to state 5
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOREACH   shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    $default  reduce using rule 29 (G)

    Beta         go to state 184
    Statement    go to state 41
    E            go to state 42
    F            go to state 43
    H            go to state 44
    I            go to state 45
    J            go to state 46
    K            go to state 47
    Var          go to state 48
    identifiers  go to state 49


State 179

   26 F: IF Bool-Expr THEN Statement SEMICOLON Beta G ENDIF .

    $default  reduce using rule 26 (F)


State 180

   72 V: DIV Term U V W .

    $default  reduce using rule 72 (V)


State 181

   74 W: MOD Term U V . W

    MOD  shift, and go to state 145

    MOD       [reduce using rule 73 (W)]
    $default  reduce using rule 73 (W)

    W  go to state 185


State 182

   36 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON ENDLOOP .

    $default  reduce using rule 36 (J)


State 183

   35 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta . ENDLOOP

    ENDLOOP  shift, and go to state 186


State 184

   30 G: ELSE Statement SEMICOLON Beta .

    $default  reduce using rule 30 (G)


State 185

   74 W: MOD Term U V W .

    $default  reduce using rule 74 (W)


State 186

   35 J: FOREACH identifiers IN identifiers BEGINLOOP Statement SEMICOLON Beta ENDLOOP .

    $default  reduce using rule 35 (J)
