State 33 conflicts: 2 shift/reduce
State 34 conflicts: 2 shift/reduce
State 40 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 58 conflicts: 2 shift/reduce
State 60 conflicts: 2 shift/reduce
State 76 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 82 conflicts: 2 shift/reduce
State 84 conflicts: 2 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 167 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program_Prime $end

    1 Program_Prime: Program

    2 Program: %empty
    3        | Function Program

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    5 Alpha: %empty
    6      | Declaration SEMICOLON Alpha

    7 B: %empty
    8  | Statement SEMICOLON B

    9 Declaration: IDENT C COLON D mInteger

   10 mInteger: INTEGER

   11 C: %empty
   12  | COMMA IDENT C

   13 D: %empty
   14  | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

   15 Statement: E
   16          | F
   17          | H
   18          | I
   19          | J
   20          | K
   21          | M
   22          | N
   23          | O

   24 E: Var ASSIGN Expression

   25 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF SEMICOLON

   26 G: %empty
   27  | ELSE Statement SEMICOLON B

   28 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP

   29 I: DO BEGINLOOP Statement SEMICOLON B ENDLOOP

   30 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

   31 K: READ Var L

   32 L: %empty
   33  | COMMA Var

   34 M: WRITE Var L

   35 N: CONTINUE

   36 O: RETURN Expression

   37 Bool-Expr: Relation-And-Expr P

   38 P: %empty
   39  | OR Relation-And-Expr P

   40 Relation-And-Expr: Relation-Expr Q
   41                  | NOT Relation-Expr Q

   42 Q: %empty
   43  | AND Relation-Expr Q

   44 Relation-Expr: Expression Comp Expression
   45              | TRUE
   46              | FALSE
   47              | L_PAREN Bool-Expr R_PAREN

   48 Comp: EQ
   49     | NEQ
   50     | LT
   51     | GT
   52     | LTE
   53     | GTE

   54 Expression: Multiplicative-Expr S T

   55 S: %empty
   56  | PLUS Multiplicative-Expr S T

   57 T: %empty
   58  | SUB Multiplicative-Expr S T

   59 Multiplicative-Expr: Term U V W

   60 U: %empty
   61  | MULT Term U V W

   62 V: %empty
   63  | DIV Term U V W

   64 W: %empty
   65  | MOD Term U V W

   66 Term: X Var
   67     | X NUMBER
   68     | X L_PAREN Expression R_PAREN
   69     | IDENT L_PAREN Y R_PAREN

   70 X: %empty
   71  | SUB

   72 Y: %empty
   73  | Expression Z

   74 Z: %empty
   75  | COMMA Expression Z

   76 Var: IDENT
   77    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 4 9 12 30 69 76 77
FUNCTION (259) 4
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
ARRAY (265) 14
OF (266) 14
IF (267) 25
THEN (268) 25
ENDIF (269) 25
ELSE (270) 27
WHILE (271) 28
DO (272) 29
FOREACH (273) 30
IN (274) 30
BEGINLOOP (275) 28 29 30
ENDLOOP (276) 28 29 30
CONTINUE (277) 35
READ (278) 31
WRITE (279) 34
TRUE (280) 45
FALSE (281) 46
RETURN (282) 36
COLON (283) 9
COMMA (284) 12 33 75
NUMBER (285) 14 67
INTEGER (286) 10
END_BODY (287) 4
SEMICOLON (288) 4 6 8 25 27 28 29 30
AND (289) 43
OR (290) 39
ASSIGN (291) 24
NOT (292) 41
PLUS (293) 56
SUB (294) 58 71
MULT (295) 61
DIV (296) 63
MOD (297) 65
L_SQUARE_BRACKET (298) 14 77
R_SQUARE_BRACKET (299) 14 77
L_PAREN (300) 47 68 69
EQ (301) 48
NEQ (302) 49
LT (303) 50
GT (304) 51
LTE (305) 52
GTE (306) 53
R_PAREN (307) 47 68 69


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program_Prime (54)
    on left: 1, on right: 0
Program (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 4, on right: 3
Alpha (57)
    on left: 5 6, on right: 4 6
B (58)
    on left: 7 8, on right: 4 8 25 27 28 29 30
Declaration (59)
    on left: 9, on right: 6
mInteger (60)
    on left: 10, on right: 9
C (61)
    on left: 11 12, on right: 9 12
D (62)
    on left: 13 14, on right: 9
Statement (63)
    on left: 15 16 17 18 19 20 21 22 23, on right: 8 25 27 28 29 30
E (64)
    on left: 24, on right: 15
F (65)
    on left: 25, on right: 16
G (66)
    on left: 26 27, on right: 25
H (67)
    on left: 28, on right: 17
I (68)
    on left: 29, on right: 18
J (69)
    on left: 30, on right: 19
K (70)
    on left: 31, on right: 20
L (71)
    on left: 32 33, on right: 31 34
M (72)
    on left: 34, on right: 21
N (73)
    on left: 35, on right: 22
O (74)
    on left: 36, on right: 23
Bool-Expr (75)
    on left: 37, on right: 25 28 47
P (76)
    on left: 38 39, on right: 37 39
Relation-And-Expr (77)
    on left: 40 41, on right: 37 39
Q (78)
    on left: 42 43, on right: 40 41 43
Relation-Expr (79)
    on left: 44 45 46 47, on right: 40 41 43
Comp (80)
    on left: 48 49 50 51 52 53, on right: 44
Expression (81)
    on left: 54, on right: 24 36 44 68 73 75 77
S (82)
    on left: 55 56, on right: 54 56 58
T (83)
    on left: 57 58, on right: 54 56 58
Multiplicative-Expr (84)
    on left: 59, on right: 54 56 58
U (85)
    on left: 60 61, on right: 59 61 63 65
V (86)
    on left: 62 63, on right: 59 61 63 65
W (87)
    on left: 64 65, on right: 59 61 63 65
Term (88)
    on left: 66 67 68 69, on right: 59 61 63 65
X (89)
    on left: 70 71, on right: 66 67 68
Y (90)
    on left: 72 73, on right: 69
Z (91)
    on left: 74 75, on right: 73 75
Var (92)
    on left: 76 77, on right: 24 31 33 34 66


State 0

    0 $accept: . Program_Prime $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program_Prime  go to state 2
    Program        go to state 3
    Function       go to state 4


State 1

    4 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program_Prime . $end

    $end  shift, and go to state 6


State 3

    1 Program_Prime: Program .

    $default  reduce using rule 1 (Program_Prime)


State 4

    3 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 7
    Function  go to state 4


State 5

    4 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program_Prime $end .

    $default  accept


State 7

    3 Program: Function Program .

    $default  reduce using rule 3 (Program)


State 8

    4 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 11
    Declaration  go to state 12


State 10

    9 Declaration: IDENT . C COLON D mInteger

    COMMA  shift, and go to state 13

    $default  reduce using rule 11 (C)

    C  go to state 14


State 11

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha . END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 Alpha: Declaration . SEMICOLON Alpha

    SEMICOLON  shift, and go to state 16


State 13

   12 C: COMMA . IDENT C

    IDENT  shift, and go to state 17


State 14

    9 Declaration: IDENT C . COLON D mInteger

    COLON  shift, and go to state 18


State 15

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS . BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 Alpha: Declaration SEMICOLON . Alpha

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 20
    Declaration  go to state 12


State 17

   12 C: COMMA IDENT . C

    COMMA  shift, and go to state 13

    $default  reduce using rule 11 (C)

    C  go to state 21


State 18

    9 Declaration: IDENT C COLON . D mInteger

    ARRAY  shift, and go to state 22

    $default  reduce using rule 13 (D)

    D  go to state 23


State 19

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS . Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (Alpha)

    Alpha        go to state 24
    Declaration  go to state 12


State 20

    6 Alpha: Declaration SEMICOLON Alpha .

    $default  reduce using rule 6 (Alpha)


State 21

   12 C: COMMA IDENT C .

    $default  reduce using rule 12 (C)


State 22

   14 D: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    9 Declaration: IDENT C COLON D . mInteger

    INTEGER  shift, and go to state 26

    mInteger  go to state 27


State 24

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha . END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    END_LOCALS  shift, and go to state 28


State 25

   14 D: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 29


State 26

   10 mInteger: INTEGER .

    $default  reduce using rule 10 (mInteger)


State 27

    9 Declaration: IDENT C COLON D mInteger .

    $default  reduce using rule 9 (Declaration)


State 28

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS . BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

   14 D: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY . B SEMICOLON END_BODY

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 41
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 31

   14 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 53


State 32

   76 Var: IDENT .
   77    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 54

    $default  reduce using rule 76 (Var)


State 33

   25 F: IF . Bool-Expr THEN Statement SEMICOLON B G ENDIF SEMICOLON

    IDENT    shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60

    IDENT     [reduce using rule 70 (X)]
    L_PAREN   [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Bool-Expr            go to state 61
    Relation-And-Expr    go to state 62
    Relation-Expr        go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 34

   28 H: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT    shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60

    IDENT     [reduce using rule 70 (X)]
    L_PAREN   [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Bool-Expr            go to state 68
    Relation-And-Expr    go to state 62
    Relation-Expr        go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 35

   29 I: DO . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 69


State 36

   30 J: FOREACH . IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT  shift, and go to state 70


State 37

   35 N: CONTINUE .

    $default  reduce using rule 35 (N)


State 38

   31 K: READ . Var L

    IDENT  shift, and go to state 32

    Var  go to state 71


State 39

   34 M: WRITE . Var L

    IDENT  shift, and go to state 32

    Var  go to state 72


State 40

   36 O: RETURN . Expression

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 73
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 41

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B . SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 74


State 42

    8 B: Statement . SEMICOLON B

    SEMICOLON  shift, and go to state 75


State 43

   15 Statement: E .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: F .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: H .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: I .

    $default  reduce using rule 18 (Statement)


State 47

   19 Statement: J .

    $default  reduce using rule 19 (Statement)


State 48

   20 Statement: K .

    $default  reduce using rule 20 (Statement)


State 49

   21 Statement: M .

    $default  reduce using rule 21 (Statement)


State 50

   22 Statement: N .

    $default  reduce using rule 22 (Statement)


State 51

   23 Statement: O .

    $default  reduce using rule 23 (Statement)


State 52

   24 E: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 76


State 53

   14 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 14 (D)


State 54

   77 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 77
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 55

   69 Term: IDENT . L_PAREN Y R_PAREN

    L_PAREN  shift, and go to state 78


State 56

   45 Relation-Expr: TRUE .

    $default  reduce using rule 45 (Relation-Expr)


State 57

   46 Relation-Expr: FALSE .

    $default  reduce using rule 46 (Relation-Expr)


State 58

   41 Relation-And-Expr: NOT . Relation-Expr Q

    IDENT    shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60

    IDENT     [reduce using rule 70 (X)]
    L_PAREN   [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Relation-Expr        go to state 79
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 59

   71 X: SUB .

    $default  reduce using rule 71 (X)


State 60

   47 Relation-Expr: L_PAREN . Bool-Expr R_PAREN

    IDENT    shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60

    IDENT     [reduce using rule 70 (X)]
    L_PAREN   [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Bool-Expr            go to state 80
    Relation-And-Expr    go to state 62
    Relation-Expr        go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 61

   25 F: IF Bool-Expr . THEN Statement SEMICOLON B G ENDIF SEMICOLON

    THEN  shift, and go to state 81


State 62

   37 Bool-Expr: Relation-And-Expr . P

    OR  shift, and go to state 82

    $default  reduce using rule 38 (P)

    P  go to state 83


State 63

   40 Relation-And-Expr: Relation-Expr . Q

    AND  shift, and go to state 84

    $default  reduce using rule 42 (Q)

    Q  go to state 85


State 64

   44 Relation-Expr: Expression . Comp Expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    Comp  go to state 92


State 65

   54 Expression: Multiplicative-Expr . S T

    PLUS  shift, and go to state 93

    $default  reduce using rule 55 (S)

    S  go to state 94


State 66

   59 Multiplicative-Expr: Term . U V W

    MULT  shift, and go to state 95

    $default  reduce using rule 60 (U)

    U  go to state 96


State 67

   66 Term: X . Var
   67     | X . NUMBER
   68     | X . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 32
    NUMBER   shift, and go to state 97
    L_PAREN  shift, and go to state 98

    Var  go to state 99


State 68

   28 H: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 69

   29 I: DO BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    Statement  go to state 101
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 70

   30 J: FOREACH IDENT . IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IN  shift, and go to state 102


State 71

   31 K: READ Var . L

    COMMA  shift, and go to state 103

    $default  reduce using rule 32 (L)

    L  go to state 104


State 72

   34 M: WRITE Var . L

    COMMA  shift, and go to state 103

    $default  reduce using rule 32 (L)

    L  go to state 105


State 73

   36 O: RETURN Expression .

    $default  reduce using rule 36 (O)


State 74

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON . END_BODY

    END_BODY  shift, and go to state 106


State 75

    8 B: Statement SEMICOLON . B

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 107
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 76

   24 E: Var ASSIGN . Expression

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 108
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 77

   77 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 109


State 78

   69 Term: IDENT L_PAREN . Y R_PAREN

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    R_PAREN   reduce using rule 72 (Y)
    $default  reduce using rule 70 (X)

    Expression           go to state 110
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67
    Y                    go to state 111


State 79

   41 Relation-And-Expr: NOT Relation-Expr . Q

    AND  shift, and go to state 84

    $default  reduce using rule 42 (Q)

    Q  go to state 112


State 80

   47 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 113


State 81

   25 F: IF Bool-Expr THEN . Statement SEMICOLON B G ENDIF SEMICOLON

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    Statement  go to state 114
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 82

   39 P: OR . Relation-And-Expr P

    IDENT    shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60

    IDENT     [reduce using rule 70 (X)]
    L_PAREN   [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Relation-And-Expr    go to state 115
    Relation-Expr        go to state 63
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 83

   37 Bool-Expr: Relation-And-Expr P .

    $default  reduce using rule 37 (Bool-Expr)


State 84

   43 Q: AND . Relation-Expr Q

    IDENT    shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60

    IDENT     [reduce using rule 70 (X)]
    L_PAREN   [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Relation-Expr        go to state 116
    Expression           go to state 64
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 85

   40 Relation-And-Expr: Relation-Expr Q .

    $default  reduce using rule 40 (Relation-And-Expr)


State 86

   48 Comp: EQ .

    $default  reduce using rule 48 (Comp)


State 87

   49 Comp: NEQ .

    $default  reduce using rule 49 (Comp)


State 88

   50 Comp: LT .

    $default  reduce using rule 50 (Comp)


State 89

   51 Comp: GT .

    $default  reduce using rule 51 (Comp)


State 90

   52 Comp: LTE .

    $default  reduce using rule 52 (Comp)


State 91

   53 Comp: GTE .

    $default  reduce using rule 53 (Comp)


State 92

   44 Relation-Expr: Expression Comp . Expression

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 117
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 93

   56 S: PLUS . Multiplicative-Expr S T

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Multiplicative-Expr  go to state 118
    Term                 go to state 66
    X                    go to state 67


State 94

   54 Expression: Multiplicative-Expr S . T

    SUB  shift, and go to state 119

    $default  reduce using rule 57 (T)

    T  go to state 120


State 95

   61 U: MULT . Term U V W

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Term  go to state 121
    X     go to state 67


State 96

   59 Multiplicative-Expr: Term U . V W

    DIV  shift, and go to state 122

    $default  reduce using rule 62 (V)

    V  go to state 123


State 97

   67 Term: X NUMBER .

    $default  reduce using rule 67 (Term)


State 98

   68 Term: X L_PAREN . Expression R_PAREN

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 124
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 99

   66 Term: X Var .

    $default  reduce using rule 66 (Term)


State 100

   28 H: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    Statement  go to state 125
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 101

   29 I: DO BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 126


State 102

   30 J: FOREACH IDENT IN . IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT  shift, and go to state 127


State 103

   33 L: COMMA . Var

    IDENT  shift, and go to state 32

    Var  go to state 128


State 104

   31 K: READ Var L .

    $default  reduce using rule 31 (K)


State 105

   34 M: WRITE Var L .

    $default  reduce using rule 34 (M)


State 106

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Alpha END_PARAMS BEGIN_LOCALS Alpha END_LOCALS BEGIN_BODY B SEMICOLON END_BODY .

    $default  reduce using rule 4 (Function)


State 107

    8 B: Statement SEMICOLON B .

    $default  reduce using rule 8 (B)


State 108

   24 E: Var ASSIGN Expression .

    $default  reduce using rule 24 (E)


State 109

   77 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 77 (Var)


State 110

   73 Y: Expression . Z

    COMMA  shift, and go to state 129

    $default  reduce using rule 74 (Z)

    Z  go to state 130


State 111

   69 Term: IDENT L_PAREN Y . R_PAREN

    R_PAREN  shift, and go to state 131


State 112

   41 Relation-And-Expr: NOT Relation-Expr Q .

    $default  reduce using rule 41 (Relation-And-Expr)


State 113

   47 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 47 (Relation-Expr)


State 114

   25 F: IF Bool-Expr THEN Statement . SEMICOLON B G ENDIF SEMICOLON

    SEMICOLON  shift, and go to state 132


State 115

   39 P: OR Relation-And-Expr . P

    OR  shift, and go to state 82

    $default  reduce using rule 38 (P)

    P  go to state 133


State 116

   43 Q: AND Relation-Expr . Q

    AND  shift, and go to state 84

    $default  reduce using rule 42 (Q)

    Q  go to state 134


State 117

   44 Relation-Expr: Expression Comp Expression .

    $default  reduce using rule 44 (Relation-Expr)


State 118

   56 S: PLUS Multiplicative-Expr . S T

    PLUS  shift, and go to state 93

    $default  reduce using rule 55 (S)

    S  go to state 135


State 119

   58 T: SUB . Multiplicative-Expr S T

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Multiplicative-Expr  go to state 136
    Term                 go to state 66
    X                    go to state 67


State 120

   54 Expression: Multiplicative-Expr S T .

    $default  reduce using rule 54 (Expression)


State 121

   61 U: MULT Term . U V W

    MULT  shift, and go to state 95

    $default  reduce using rule 60 (U)

    U  go to state 137


State 122

   63 V: DIV . Term U V W

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Term  go to state 138
    X     go to state 67


State 123

   59 Multiplicative-Expr: Term U V . W

    MOD  shift, and go to state 139

    $default  reduce using rule 64 (W)

    W  go to state 140


State 124

   68 Term: X L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 141


State 125

   28 H: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 142


State 126

   29 I: DO BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 143
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 127

   30 J: FOREACH IDENT IN IDENT . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 144


State 128

   33 L: COMMA Var .

    $default  reduce using rule 33 (L)


State 129

   75 Z: COMMA . Expression Z

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 145
    Multiplicative-Expr  go to state 65
    Term                 go to state 66
    X                    go to state 67


State 130

   73 Y: Expression Z .

    $default  reduce using rule 73 (Y)


State 131

   69 Term: IDENT L_PAREN Y R_PAREN .

    $default  reduce using rule 69 (Term)


State 132

   25 F: IF Bool-Expr THEN Statement SEMICOLON . B G ENDIF SEMICOLON

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 146
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 133

   39 P: OR Relation-And-Expr P .

    $default  reduce using rule 39 (P)


State 134

   43 Q: AND Relation-Expr Q .

    $default  reduce using rule 43 (Q)


State 135

   56 S: PLUS Multiplicative-Expr S . T

    SUB  shift, and go to state 119

    SUB       [reduce using rule 57 (T)]
    $default  reduce using rule 57 (T)

    T  go to state 147


State 136

   58 T: SUB Multiplicative-Expr . S T

    PLUS  shift, and go to state 93

    $default  reduce using rule 55 (S)

    S  go to state 148


State 137

   61 U: MULT Term U . V W

    DIV  shift, and go to state 122

    DIV       [reduce using rule 62 (V)]
    $default  reduce using rule 62 (V)

    V  go to state 149


State 138

   63 V: DIV Term . U V W

    MULT  shift, and go to state 95

    $default  reduce using rule 60 (U)

    U  go to state 150


State 139

   65 W: MOD . Term U V W

    IDENT  shift, and go to state 55
    SUB    shift, and go to state 59

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Term  go to state 151
    X     go to state 67


State 140

   59 Multiplicative-Expr: Term U V W .

    $default  reduce using rule 59 (Multiplicative-Expr)


State 141

   68 Term: X L_PAREN Expression R_PAREN .

    $default  reduce using rule 68 (Term)


State 142

   28 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 152
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 143

   29 I: DO BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 153


State 144

   30 J: FOREACH IDENT IN IDENT BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    Statement  go to state 154
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 145

   75 Z: COMMA Expression . Z

    COMMA  shift, and go to state 129

    $default  reduce using rule 74 (Z)

    Z  go to state 155


State 146

   25 F: IF Bool-Expr THEN Statement SEMICOLON B . G ENDIF SEMICOLON

    ELSE  shift, and go to state 156

    $default  reduce using rule 26 (G)

    G  go to state 157


State 147

   56 S: PLUS Multiplicative-Expr S T .

    $default  reduce using rule 56 (S)


State 148

   58 T: SUB Multiplicative-Expr S . T

    SUB  shift, and go to state 119

    SUB       [reduce using rule 57 (T)]
    $default  reduce using rule 57 (T)

    T  go to state 158


State 149

   61 U: MULT Term U V . W

    MOD  shift, and go to state 139

    MOD       [reduce using rule 64 (W)]
    $default  reduce using rule 64 (W)

    W  go to state 159


State 150

   63 V: DIV Term U . V W

    DIV  shift, and go to state 122

    DIV       [reduce using rule 62 (V)]
    $default  reduce using rule 62 (V)

    V  go to state 160


State 151

   65 W: MOD Term . U V W

    MULT  shift, and go to state 95

    $default  reduce using rule 60 (U)

    U  go to state 161


State 152

   28 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 162


State 153

   29 I: DO BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 29 (I)


State 154

   30 J: FOREACH IDENT IN IDENT BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 163


State 155

   75 Z: COMMA Expression Z .

    $default  reduce using rule 75 (Z)


State 156

   27 G: ELSE . Statement SEMICOLON B

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    Statement  go to state 164
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 157

   25 F: IF Bool-Expr THEN Statement SEMICOLON B G . ENDIF SEMICOLON

    ENDIF  shift, and go to state 165


State 158

   58 T: SUB Multiplicative-Expr S T .

    $default  reduce using rule 58 (T)


State 159

   61 U: MULT Term U V W .

    $default  reduce using rule 61 (U)


State 160

   63 V: DIV Term U V . W

    MOD  shift, and go to state 139

    MOD       [reduce using rule 64 (W)]
    $default  reduce using rule 64 (W)

    W  go to state 166


State 161

   65 W: MOD Term U . V W

    DIV  shift, and go to state 122

    DIV       [reduce using rule 62 (V)]
    $default  reduce using rule 62 (V)

    V  go to state 167


State 162

   28 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 28 (H)


State 163

   30 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 168
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 164

   27 G: ELSE Statement . SEMICOLON B

    SEMICOLON  shift, and go to state 169


State 165

   25 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 170


State 166

   63 V: DIV Term U V W .

    $default  reduce using rule 63 (V)


State 167

   65 W: MOD Term U V . W

    MOD  shift, and go to state 139

    MOD       [reduce using rule 64 (W)]
    $default  reduce using rule 64 (W)

    W  go to state 171


State 168

   30 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 172


State 169

   27 G: ELSE Statement SEMICOLON . B

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 7 (B)

    B          go to state 173
    Statement  go to state 42
    E          go to state 43
    F          go to state 44
    H          go to state 45
    I          go to state 46
    J          go to state 47
    K          go to state 48
    M          go to state 49
    N          go to state 50
    O          go to state 51
    Var        go to state 52


State 170

   25 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF SEMICOLON .

    $default  reduce using rule 25 (F)


State 171

   65 W: MOD Term U V W .

    $default  reduce using rule 65 (W)


State 172

   30 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 30 (J)


State 173

   27 G: ELSE Statement SEMICOLON B .

    $default  reduce using rule 27 (G)
