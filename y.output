State 38 conflicts: 1 shift/reduce
State 57 conflicts: 2 shift/reduce
State 69 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program_Prime $end

    1 Program_Prime: Program

    2 Program: %empty
    3        | Function Program

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    5 A: %empty
    6  | Declaration SEMICOLON A

    7 B: %empty
    8  | Statement SEMICOLON B

    9 Declaration: IDENT C COLON D INTEGER

   10 C: %empty
   11  | COMMA IDENT C

   12 D: %empty
   13  | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

   14 Statement: E
   15          | F
   16          | H
   17          | I
   18          | J
   19          | K
   20          | M
   21          | N
   22          | O

   23 E: Var ASSIGN Expression

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF

   25 G: %empty
   26  | ELSE Statement SEMICOLON B

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP

   28 I: DO BEGINLOOP Statement SEMICOLON B ENDLOOP

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

   30 K: READ Var L

   31 L: %empty
   32  | COMMA Var

   33 M: WRITE Var L

   34 N: CONTINUE

   35 O: RETURN Expression

   36 Bool-Expr: Relation-And-Expr P

   37 P: %empty
   38  | OR Relation-And-Expr P

   39 Relation-And-Expr: Relation-Expr Q

   40 Q: %empty
   41  | AND Relation-Expr Q

   42 Relation-Expr: R Expression Comp Expression
   43              | R TRUE
   44              | R FALSE
   45              | R L_PAREN Bool-Expr R_PAREN

   46 R: %empty
   47  | NOT

   48 Comp: EQ
   49     | NEQ
   50     | LT
   51     | GT
   52     | LTE
   53     | GTE

   54 Expression: Multiplicative-Expr S T

   55 S: %empty
   56  | PLUS Multiplicative-Expr S T

   57 T: %empty
   58  | SUB Multiplicative-Expr S T

   59 Multiplicative-Expr: Term U V W

   60 U: %empty
   61  | MULT Term U V W

   62 V: %empty
   63  | DIV Term U V W

   64 W: %empty
   65  | MOD Term U V W

   66 Term: X Var
   67     | X NUMBER
   68     | X L_PAREN Expression R_PAREN
   69     | IDENT L_PAREN Y R_PAREN

   70 X: %empty
   71  | SUB

   72 Y: %empty
   73  | Expression Z

   74 Z: %empty
   75  | COMMA Expression Z

   76 Var: IDENT
   77    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
ARRAY (265) 13
OF (266) 13
IF (267) 24
THEN (268) 24
ENDIF (269) 24
ELSE (270) 26
WHILE (271) 27
DO (272) 28
FOREACH (273) 29
IN (274) 29
BEGINLOOP (275) 27 28 29
ENDLOOP (276) 27 28 29
CONTINUE (277) 34
READ (278) 30
WRITE (279) 33
AND (280) 41
OR (281) 38
NOT (282) 47
TRUE (283) 43
FALSE (284) 44
RETURN (285) 35
PLUS (286) 56
SUB (287) 58 71
MULT (288) 61
DIV (289) 63
MOD (290) 65
EQ (291) 48
NEQ (292) 49
LT (293) 50
GT (294) 51
LTE (295) 52
GTE (296) 53
SEMICOLON (297) 4 6 8 24 26 27 28 29
COLON (298) 9
COMMA (299) 11 32 75
L_PAREN (300) 45 68 69
R_PAREN (301) 45 68 69
L_SQUARE_BRACKET (302) 13 77
IDENT (303) 4 9 11 29 69 76 77
R_SQUARE_BRACKET (304) 13 77
ASSIGN (305) 23
NUMBER (306) 13 67
INTEGER (307) 9


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program_Prime (54)
    on left: 1, on right: 0
Program (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 4, on right: 3
A (57)
    on left: 5 6, on right: 4 6
B (58)
    on left: 7 8, on right: 4 8 24 26 27 28 29
Declaration (59)
    on left: 9, on right: 6
C (60)
    on left: 10 11, on right: 9 11
D (61)
    on left: 12 13, on right: 9
Statement (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 8 24 26 27 28 29
E (63)
    on left: 23, on right: 14
F (64)
    on left: 24, on right: 15
G (65)
    on left: 25 26, on right: 24
H (66)
    on left: 27, on right: 16
I (67)
    on left: 28, on right: 17
J (68)
    on left: 29, on right: 18
K (69)
    on left: 30, on right: 19
L (70)
    on left: 31 32, on right: 30 33
M (71)
    on left: 33, on right: 20
N (72)
    on left: 34, on right: 21
O (73)
    on left: 35, on right: 22
Bool-Expr (74)
    on left: 36, on right: 24 27 45
P (75)
    on left: 37 38, on right: 36 38
Relation-And-Expr (76)
    on left: 39, on right: 36 38
Q (77)
    on left: 40 41, on right: 39 41
Relation-Expr (78)
    on left: 42 43 44 45, on right: 39 41
R (79)
    on left: 46 47, on right: 42 43 44 45
Comp (80)
    on left: 48 49 50 51 52 53, on right: 42
Expression (81)
    on left: 54, on right: 23 35 42 68 73 75 77
S (82)
    on left: 55 56, on right: 54 56 58
T (83)
    on left: 57 58, on right: 54 56 58
Multiplicative-Expr (84)
    on left: 59, on right: 54 56 58
U (85)
    on left: 60 61, on right: 59 61 63 65
V (86)
    on left: 62 63, on right: 59 61 63 65
W (87)
    on left: 64 65, on right: 59 61 63 65
Term (88)
    on left: 66 67 68 69, on right: 59 61 63 65
X (89)
    on left: 70 71, on right: 66 67 68
Y (90)
    on left: 72 73, on right: 69
Z (91)
    on left: 74 75, on right: 73 75
Var (92)
    on left: 76 77, on right: 23 30 32 33 66


State 0

    0 $accept: . Program_Prime $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program_Prime  go to state 2
    Program        go to state 3
    Function       go to state 4


State 1

    4 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program_Prime . $end

    $end  shift, and go to state 6


State 3

    1 Program_Prime: Program .

    $default  reduce using rule 1 (Program_Prime)


State 4

    3 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 7
    Function  go to state 4


State 5

    4 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program_Prime $end .

    $default  accept


State 7

    3 Program: Function Program .

    $default  reduce using rule 3 (Program)


State 8

    4 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (A)

    A            go to state 11
    Declaration  go to state 12


State 10

    9 Declaration: IDENT . C COLON D INTEGER

    COMMA  shift, and go to state 13

    $default  reduce using rule 10 (C)

    C  go to state 14


State 11

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A . END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 A: Declaration . SEMICOLON A

    SEMICOLON  shift, and go to state 16


State 13

   11 C: COMMA . IDENT C

    IDENT  shift, and go to state 17


State 14

    9 Declaration: IDENT C . COLON D INTEGER

    COLON  shift, and go to state 18


State 15

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS . BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 A: Declaration SEMICOLON . A

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (A)

    A            go to state 20
    Declaration  go to state 12


State 17

   11 C: COMMA IDENT . C

    COMMA  shift, and go to state 13

    $default  reduce using rule 10 (C)

    C  go to state 21


State 18

    9 Declaration: IDENT C COLON . D INTEGER

    ARRAY  shift, and go to state 22

    $default  reduce using rule 12 (D)

    D  go to state 23


State 19

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS . A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (A)

    A            go to state 24
    Declaration  go to state 12


State 20

    6 A: Declaration SEMICOLON A .

    $default  reduce using rule 6 (A)


State 21

   11 C: COMMA IDENT C .

    $default  reduce using rule 11 (C)


State 22

   13 D: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    9 Declaration: IDENT C COLON D . INTEGER

    INTEGER  shift, and go to state 26


State 24

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A . END_LOCALS BEGIN_BODY B SEMICOLON END_BODY

    END_LOCALS  shift, and go to state 27


State 25

   13 D: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 28


State 26

    9 Declaration: IDENT C COLON D INTEGER .

    $default  reduce using rule 9 (Declaration)


State 27

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS . BEGIN_BODY B SEMICOLON END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   13 D: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY . B SEMICOLON END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 40
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 30

   13 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 52


State 31

   24 F: IF . Bool-Expr THEN Statement SEMICOLON B G ENDIF

    NOT  shift, and go to state 53

    $default  reduce using rule 46 (R)

    Bool-Expr          go to state 54
    Relation-And-Expr  go to state 55
    Relation-Expr      go to state 56
    R                  go to state 57


State 32

   27 H: WHILE . Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP

    NOT  shift, and go to state 53

    $default  reduce using rule 46 (R)

    Bool-Expr          go to state 58
    Relation-And-Expr  go to state 55
    Relation-Expr      go to state 56
    R                  go to state 57


State 33

   28 I: DO . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 59


State 34

   29 J: FOREACH . IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT  shift, and go to state 60


State 35

   34 N: CONTINUE .

    $default  reduce using rule 34 (N)


State 36

   30 K: READ . Var L

    IDENT  shift, and go to state 39

    Var  go to state 61


State 37

   33 M: WRITE . Var L

    IDENT  shift, and go to state 39

    Var  go to state 62


State 38

   35 O: RETURN . Expression

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 65
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 39

   76 Var: IDENT .
   77    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 76 (Var)


State 40

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B . SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 70


State 41

    8 B: Statement . SEMICOLON B

    SEMICOLON  shift, and go to state 71


State 42

   14 Statement: E .

    $default  reduce using rule 14 (Statement)


State 43

   15 Statement: F .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: H .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: I .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: J .

    $default  reduce using rule 18 (Statement)


State 47

   19 Statement: K .

    $default  reduce using rule 19 (Statement)


State 48

   20 Statement: M .

    $default  reduce using rule 20 (Statement)


State 49

   21 Statement: N .

    $default  reduce using rule 21 (Statement)


State 50

   22 Statement: O .

    $default  reduce using rule 22 (Statement)


State 51

   23 E: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 72


State 52

   13 D: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 13 (D)


State 53

   47 R: NOT .

    $default  reduce using rule 47 (R)


State 54

   24 F: IF Bool-Expr . THEN Statement SEMICOLON B G ENDIF

    THEN  shift, and go to state 73


State 55

   36 Bool-Expr: Relation-And-Expr . P

    OR  shift, and go to state 74

    $default  reduce using rule 37 (P)

    P  go to state 75


State 56

   39 Relation-And-Expr: Relation-Expr . Q

    AND  shift, and go to state 76

    $default  reduce using rule 40 (Q)

    Q  go to state 77


State 57

   42 Relation-Expr: R . Expression Comp Expression
   43              | R . TRUE
   44              | R . FALSE
   45              | R . L_PAREN Bool-Expr R_PAREN

    TRUE     shift, and go to state 78
    FALSE    shift, and go to state 79
    SUB      shift, and go to state 63
    L_PAREN  shift, and go to state 80
    IDENT    shift, and go to state 64

    L_PAREN   [reduce using rule 70 (X)]
    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 81
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 58

   27 H: WHILE Bool-Expr . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 82


State 59

   28 I: DO BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 83
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 60

   29 J: FOREACH IDENT . IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IN  shift, and go to state 84


State 61

   30 K: READ Var . L

    COMMA  shift, and go to state 85

    $default  reduce using rule 31 (L)

    L  go to state 86


State 62

   33 M: WRITE Var . L

    COMMA  shift, and go to state 85

    $default  reduce using rule 31 (L)

    L  go to state 87


State 63

   71 X: SUB .

    $default  reduce using rule 71 (X)


State 64

   69 Term: IDENT . L_PAREN Y R_PAREN

    L_PAREN  shift, and go to state 88


State 65

   35 O: RETURN Expression .

    $default  reduce using rule 35 (O)


State 66

   54 Expression: Multiplicative-Expr . S T

    PLUS  shift, and go to state 89

    $default  reduce using rule 55 (S)

    S  go to state 90


State 67

   59 Multiplicative-Expr: Term . U V W

    MULT  shift, and go to state 91

    $default  reduce using rule 60 (U)

    U  go to state 92


State 68

   66 Term: X . Var
   67     | X . NUMBER
   68     | X . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 93
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 94

    Var  go to state 95


State 69

   77 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 96
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 70

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON . END_BODY

    END_BODY  shift, and go to state 97


State 71

    8 B: Statement SEMICOLON . B

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 98
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 72

   23 E: Var ASSIGN . Expression

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 99
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 73

   24 F: IF Bool-Expr THEN . Statement SEMICOLON B G ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 100
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 74

   38 P: OR . Relation-And-Expr P

    NOT  shift, and go to state 53

    $default  reduce using rule 46 (R)

    Relation-And-Expr  go to state 101
    Relation-Expr      go to state 56
    R                  go to state 57


State 75

   36 Bool-Expr: Relation-And-Expr P .

    $default  reduce using rule 36 (Bool-Expr)


State 76

   41 Q: AND . Relation-Expr Q

    NOT  shift, and go to state 53

    $default  reduce using rule 46 (R)

    Relation-Expr  go to state 102
    R              go to state 57


State 77

   39 Relation-And-Expr: Relation-Expr Q .

    $default  reduce using rule 39 (Relation-And-Expr)


State 78

   43 Relation-Expr: R TRUE .

    $default  reduce using rule 43 (Relation-Expr)


State 79

   44 Relation-Expr: R FALSE .

    $default  reduce using rule 44 (Relation-Expr)


State 80

   45 Relation-Expr: R L_PAREN . Bool-Expr R_PAREN

    NOT  shift, and go to state 53

    $default  reduce using rule 46 (R)

    Bool-Expr          go to state 103
    Relation-And-Expr  go to state 55
    Relation-Expr      go to state 56
    R                  go to state 57


State 81

   42 Relation-Expr: R Expression . Comp Expression

    EQ   shift, and go to state 104
    NEQ  shift, and go to state 105
    LT   shift, and go to state 106
    GT   shift, and go to state 107
    LTE  shift, and go to state 108
    GTE  shift, and go to state 109

    Comp  go to state 110


State 82

   27 H: WHILE Bool-Expr BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 111
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 83

   28 I: DO BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 112


State 84

   29 J: FOREACH IDENT IN . IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP

    IDENT  shift, and go to state 113


State 85

   32 L: COMMA . Var

    IDENT  shift, and go to state 39

    Var  go to state 114


State 86

   30 K: READ Var L .

    $default  reduce using rule 30 (K)


State 87

   33 M: WRITE Var L .

    $default  reduce using rule 33 (M)


State 88

   69 Term: IDENT L_PAREN . Y R_PAREN

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    R_PAREN   reduce using rule 72 (Y)
    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 115
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68
    Y                    go to state 116


State 89

   56 S: PLUS . Multiplicative-Expr S T

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Multiplicative-Expr  go to state 117
    Term                 go to state 67
    X                    go to state 68


State 90

   54 Expression: Multiplicative-Expr S . T

    SUB  shift, and go to state 118

    $default  reduce using rule 57 (T)

    T  go to state 119


State 91

   61 U: MULT . Term U V W

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Term  go to state 120
    X     go to state 68


State 92

   59 Multiplicative-Expr: Term U . V W

    DIV  shift, and go to state 121

    $default  reduce using rule 62 (V)

    V  go to state 122


State 93

   68 Term: X L_PAREN . Expression R_PAREN

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 123
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 94

   67 Term: X NUMBER .

    $default  reduce using rule 67 (Term)


State 95

   66 Term: X Var .

    $default  reduce using rule 66 (Term)


State 96

   77 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 97

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS A END_PARAMS BEGIN_LOCALS A END_LOCALS BEGIN_BODY B SEMICOLON END_BODY .

    $default  reduce using rule 4 (Function)


State 98

    8 B: Statement SEMICOLON B .

    $default  reduce using rule 8 (B)


State 99

   23 E: Var ASSIGN Expression .

    $default  reduce using rule 23 (E)


State 100

   24 F: IF Bool-Expr THEN Statement . SEMICOLON B G ENDIF

    SEMICOLON  shift, and go to state 125


State 101

   38 P: OR Relation-And-Expr . P

    OR  shift, and go to state 74

    $default  reduce using rule 37 (P)

    P  go to state 126


State 102

   41 Q: AND Relation-Expr . Q

    AND  shift, and go to state 76

    $default  reduce using rule 40 (Q)

    Q  go to state 127


State 103

   45 Relation-Expr: R L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 128


State 104

   48 Comp: EQ .

    $default  reduce using rule 48 (Comp)


State 105

   49 Comp: NEQ .

    $default  reduce using rule 49 (Comp)


State 106

   50 Comp: LT .

    $default  reduce using rule 50 (Comp)


State 107

   51 Comp: GT .

    $default  reduce using rule 51 (Comp)


State 108

   52 Comp: LTE .

    $default  reduce using rule 52 (Comp)


State 109

   53 Comp: GTE .

    $default  reduce using rule 53 (Comp)


State 110

   42 Relation-Expr: R Expression Comp . Expression

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 129
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 111

   27 H: WHILE Bool-Expr BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 130


State 112

   28 I: DO BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 131
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 113

   29 J: FOREACH IDENT IN IDENT . BEGINLOOP Statement SEMICOLON B ENDLOOP

    BEGINLOOP  shift, and go to state 132


State 114

   32 L: COMMA Var .

    $default  reduce using rule 32 (L)


State 115

   73 Y: Expression . Z

    COMMA  shift, and go to state 133

    $default  reduce using rule 74 (Z)

    Z  go to state 134


State 116

   69 Term: IDENT L_PAREN Y . R_PAREN

    R_PAREN  shift, and go to state 135


State 117

   56 S: PLUS Multiplicative-Expr . S T

    PLUS  shift, and go to state 89

    $default  reduce using rule 55 (S)

    S  go to state 136


State 118

   58 T: SUB . Multiplicative-Expr S T

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Multiplicative-Expr  go to state 137
    Term                 go to state 67
    X                    go to state 68


State 119

   54 Expression: Multiplicative-Expr S T .

    $default  reduce using rule 54 (Expression)


State 120

   61 U: MULT Term . U V W

    MULT  shift, and go to state 91

    $default  reduce using rule 60 (U)

    U  go to state 138


State 121

   63 V: DIV . Term U V W

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Term  go to state 139
    X     go to state 68


State 122

   59 Multiplicative-Expr: Term U V . W

    MOD  shift, and go to state 140

    $default  reduce using rule 64 (W)

    W  go to state 141


State 123

   68 Term: X L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 142


State 124

   77 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 77 (Var)


State 125

   24 F: IF Bool-Expr THEN Statement SEMICOLON . B G ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 143
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 126

   38 P: OR Relation-And-Expr P .

    $default  reduce using rule 38 (P)


State 127

   41 Q: AND Relation-Expr Q .

    $default  reduce using rule 41 (Q)


State 128

   45 Relation-Expr: R L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 45 (Relation-Expr)


State 129

   42 Relation-Expr: R Expression Comp Expression .

    $default  reduce using rule 42 (Relation-Expr)


State 130

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 144
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 131

   28 I: DO BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 145


State 132

   29 J: FOREACH IDENT IN IDENT BEGINLOOP . Statement SEMICOLON B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 146
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 133

   75 Z: COMMA . Expression Z

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Expression           go to state 147
    Multiplicative-Expr  go to state 66
    Term                 go to state 67
    X                    go to state 68


State 134

   73 Y: Expression Z .

    $default  reduce using rule 73 (Y)


State 135

   69 Term: IDENT L_PAREN Y R_PAREN .

    $default  reduce using rule 69 (Term)


State 136

   56 S: PLUS Multiplicative-Expr S . T

    SUB  shift, and go to state 118

    SUB       [reduce using rule 57 (T)]
    $default  reduce using rule 57 (T)

    T  go to state 148


State 137

   58 T: SUB Multiplicative-Expr . S T

    PLUS  shift, and go to state 89

    $default  reduce using rule 55 (S)

    S  go to state 149


State 138

   61 U: MULT Term U . V W

    DIV  shift, and go to state 121

    DIV       [reduce using rule 62 (V)]
    $default  reduce using rule 62 (V)

    V  go to state 150


State 139

   63 V: DIV Term . U V W

    MULT  shift, and go to state 91

    $default  reduce using rule 60 (U)

    U  go to state 151


State 140

   65 W: MOD . Term U V W

    SUB    shift, and go to state 63
    IDENT  shift, and go to state 64

    IDENT     [reduce using rule 70 (X)]
    $default  reduce using rule 70 (X)

    Term  go to state 152
    X     go to state 68


State 141

   59 Multiplicative-Expr: Term U V W .

    $default  reduce using rule 59 (Multiplicative-Expr)


State 142

   68 Term: X L_PAREN Expression R_PAREN .

    $default  reduce using rule 68 (Term)


State 143

   24 F: IF Bool-Expr THEN Statement SEMICOLON B . G ENDIF

    ELSE  shift, and go to state 153

    $default  reduce using rule 25 (G)

    G  go to state 154


State 144

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 155


State 145

   28 I: DO BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 28 (I)


State 146

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement . SEMICOLON B ENDLOOP

    SEMICOLON  shift, and go to state 156


State 147

   75 Z: COMMA Expression . Z

    COMMA  shift, and go to state 133

    $default  reduce using rule 74 (Z)

    Z  go to state 157


State 148

   56 S: PLUS Multiplicative-Expr S T .

    $default  reduce using rule 56 (S)


State 149

   58 T: SUB Multiplicative-Expr S . T

    SUB  shift, and go to state 118

    SUB       [reduce using rule 57 (T)]
    $default  reduce using rule 57 (T)

    T  go to state 158


State 150

   61 U: MULT Term U V . W

    MOD  shift, and go to state 140

    MOD       [reduce using rule 64 (W)]
    $default  reduce using rule 64 (W)

    W  go to state 159


State 151

   63 V: DIV Term U . V W

    DIV  shift, and go to state 121

    DIV       [reduce using rule 62 (V)]
    $default  reduce using rule 62 (V)

    V  go to state 160


State 152

   65 W: MOD Term . U V W

    MULT  shift, and go to state 91

    $default  reduce using rule 60 (U)

    U  go to state 161


State 153

   26 G: ELSE . Statement SEMICOLON B

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    Statement  go to state 162
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 154

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G . ENDIF

    ENDIF  shift, and go to state 163


State 155

   27 H: WHILE Bool-Expr BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 27 (H)


State 156

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON . B ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 164
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 157

   75 Z: COMMA Expression Z .

    $default  reduce using rule 75 (Z)


State 158

   58 T: SUB Multiplicative-Expr S T .

    $default  reduce using rule 58 (T)


State 159

   61 U: MULT Term U V W .

    $default  reduce using rule 61 (U)


State 160

   63 V: DIV Term U V . W

    MOD  shift, and go to state 140

    MOD       [reduce using rule 64 (W)]
    $default  reduce using rule 64 (W)

    W  go to state 165


State 161

   65 W: MOD Term U . V W

    DIV  shift, and go to state 121

    DIV       [reduce using rule 62 (V)]
    $default  reduce using rule 62 (V)

    V  go to state 166


State 162

   26 G: ELSE Statement . SEMICOLON B

    SEMICOLON  shift, and go to state 167


State 163

   24 F: IF Bool-Expr THEN Statement SEMICOLON B G ENDIF .

    $default  reduce using rule 24 (F)


State 164

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B . ENDLOOP

    ENDLOOP  shift, and go to state 168


State 165

   63 V: DIV Term U V W .

    $default  reduce using rule 63 (V)


State 166

   65 W: MOD Term U V . W

    MOD  shift, and go to state 140

    MOD       [reduce using rule 64 (W)]
    $default  reduce using rule 64 (W)

    W  go to state 169


State 167

   26 G: ELSE Statement SEMICOLON . B

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 7 (B)

    B          go to state 170
    Statement  go to state 41
    E          go to state 42
    F          go to state 43
    H          go to state 44
    I          go to state 45
    J          go to state 46
    K          go to state 47
    M          go to state 48
    N          go to state 49
    O          go to state 50
    Var        go to state 51


State 168

   29 J: FOREACH IDENT IN IDENT BEGINLOOP Statement SEMICOLON B ENDLOOP .

    $default  reduce using rule 29 (J)


State 169

   65 W: MOD Term U V W .

    $default  reduce using rule 65 (W)


State 170

   26 G: ELSE Statement SEMICOLON B .

    $default  reduce using rule 26 (G)
